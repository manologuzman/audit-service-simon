var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Alert.html",[0,0.015,1,1.556]],["body/classes/Alert.html",[0,0.014,1,1.974,2,1.287,3,0.267,4,0.446,5,0.231,6,2.424,7,0.343,8,1.665,9,4.584,10,2.185,11,1.728,12,2.61,13,2.394,14,1.076,15,1.811,16,2.898,17,2.381,18,3.623,19,0.906,20,2.898,21,0.858,22,0.03,23,0.858,24,0.858,25,2.898,26,2.898,27,2.898,28,2.424,29,2.111,30,1.974,31,2.898,32,2.898,33,0.267,34,0.019,35,0.019]],["title/controllers/AlertController.html",[36,1.313,37,2.082]],["body/controllers/AlertController.html",[0,0.014,3,0.274,4,0.237,5,0.237,7,0.351,10,1.031,12,1.438,14,0.529,19,0.481,21,0.878,22,0.031,23,0.878,24,0.878,33,0.274,34,0.02,35,0.02,36,1.213,37,2.686,38,1.213,39,2.482,40,2.162,41,2.482,42,1.227,43,1.951,44,2.197,45,2.482,46,3.349,47,1.318,48,2.162,49,2.686,50,3.466,51,2.968,52,3.019,53,2.74,54,3.349,55,4.145,56,2.968,57,3.019,58,2.686,59,2.419,60,2.968,61,2.686,62,0.878,63,1.693,64,0.684,65,2.162,66,2.686,67,0.632,68,1.923,69,2.968,70,2.162,71,3.479,72,3.019,73,1.318,74,2.532,75,1.574,76,1.118,77,1.923,78,1.574,79,2.968,80,2.968,81,1.213,82,2.162,83,1.841,84,2.162,85,2.482,86,1.318,87,2.968,88,1.318,89,1.923]],["title/modules/AlertModule.html",[90,1.116,91,1.876]],["body/modules/AlertModule.html",[0,0.015,3,0.301,4,0.26,5,0.26,22,0.031,33,0.301,34,0.021,35,0.021,37,3.251,38,1.806,64,0.744,67,0.694,74,3.074,75,1.729,76,1.228,77,2.113,78,1.729,90,1.743,91,3.609,92,1.448,93,1.448,94,1.729,95,1.729,96,1.448,97,2.66,98,1.729,99,2.727,100,2.727,101,3.143,102,2.014,103,2.344,104,1.729,105,1.729,106,3.261,107,2.727,108,3.261,109,2.727,110,2.375,111,2.727,112,3.261,113,2.727]],["title/injectables/AlertPrismaRepository.html",[101,1.704,114,0.809]],["body/injectables/AlertPrismaRepository.html",[0,0.015,1,2.705,3,0.295,4,0.349,5,0.256,7,0.379,10,1.111,11,1.026,12,1.55,13,1.421,14,0.885,15,1.421,19,0.708,21,1.292,22,0.031,23,1.292,24,1.292,33,0.295,34,0.021,35,0.021,42,1.292,43,2.03,44,2.314,62,0.947,63,1.784,64,0.706,67,0.681,81,1.307,86,1.421,88,1.421,101,2.314,102,1.854,114,1.099,115,1.421,116,2.676,117,2.331,118,3.2,119,2.829,120,4.365,121,3.2,122,2.676,123,3.2,124,2.829,125,2.331,126,2.331,127,2.331,128,2.074,129,4.365,130,3.2,131,1.307,132,3.2,133,3.2,134,3.2,135,3.2,136,3.2]],["title/controllers/AppController.html",[36,1.313,137,2.082]],["body/controllers/AppController.html",[0,0.019,3,0.369,4,0.32,5,0.32,7,0.474,10,1.391,17,1.904,19,0.649,22,0.031,33,0.369,34,0.024,35,0.024,36,2.067,38,1.636,42,1.497,47,1.779,62,1.185,64,0.669,67,0.852,81,1.636,88,1.779,137,3.278,138,3.349,139,4.872,140,4.004,141,2.94,142,3.349,143,4.004]],["title/modules/AppModule.html",[90,1.116,144,2.082]],["body/modules/AppModule.html",[0,0.014,3,0.271,4,0.235,5,0.235,22,0.031,33,0.271,34,0.02,35,0.02,38,1.681,64,0.778,67,0.625,90,1.65,91,3.277,92,1.305,93,1.305,94,1.558,95,1.558,96,1.305,97,2.518,98,1.558,103,2.182,104,1.558,105,1.558,110,2.998,137,3.077,141,2.977,142,2.457,144,4.061,145,2.457,146,2.457,147,2.457,148,3.277,149,3.277,150,3.277,151,2.938,152,2.938,153,2.938,154,2.457,155,2.938,156,2.938,157,2.938,158,2.938,159,2.938,160,2.938,161,2.14,162,2.938,163,2.14]],["title/injectables/AppService.html",[114,0.809,141,1.704]],["body/injectables/AppService.html",[0,0.02,3,0.387,4,0.335,5,0.335,7,0.497,17,1.962,19,0.681,22,0.03,33,0.387,34,0.025,35,0.025,42,1.542,62,1.243,64,0.555,67,0.894,88,1.865,114,1.312,115,1.865,139,4.955,141,2.763,164,3.512,165,4.199,166,3.059,167,3.059,168,4.199]],["title/classes/Coordinates.html",[0,0.015,169,2.082]],["body/classes/Coordinates.html",[0,0.023,2,1.195,3,0.248,4,0.215,5,0.215,7,0.318,8,1.579,11,0.862,14,1.043,17,1.013,19,0.627,22,0.031,33,0.248,34,0.018,35,0.018,47,1.717,64,0.599,73,1.195,83,1.195,161,1.96,169,3.899,170,2.932,171,1.743,172,2.01,173,2.01,174,3.058,175,2.505,176,2.69,177,2.69,178,2.25,179,2.69,180,3.233,181,2.25,182,2.505,183,3.603,184,3.784,185,3.233,186,2.505,187,4.137,188,1.426,189,1.96,190,3.794,191,2.25,192,2.816,193,2.641,194,1.717,195,3.058,196,1.96,197,1.96,198,1.57,199,2.25,200,2.25,201,1.743,202,1.743,203,2.25,204,1.57,205,2.25,206,1.96,207,1.57]],["title/classes/CreateAlertDto.html",[0,0.015,46,2.082]],["body/classes/CreateAlertDto.html",[0,0.018,2,1.18,3,0.245,4,0.393,5,0.212,7,0.314,8,1.565,11,1.441,12,2.176,14,0.997,17,2.158,19,0.797,22,0.03,33,0.245,34,0.018,35,0.018,46,2.482,47,2.185,53,3.038,54,2.911,64,0.507,73,1.18,166,2.791,167,3.583,175,3.187,182,3.378,186,3.378,188,1.408,190,3.378,194,1.702,195,2.871,208,4.36,209,2.222,210,3.831,211,3.831,212,3.204,213,3.204,214,2.657,215,2.657,216,3.204,217,3.204,218,3.204,219,2.791,220,3.204,221,4.493,222,2.657,223,2.009,224,3.204,225,3.204,226,3.831,227,2.482,228,2.657,229,3.204,230,2.657,231,2.657]],["title/injectables/CreateAlertUseCase.html",[74,1.704,114,0.809]],["body/injectables/CreateAlertUseCase.html",[0,0.014,1,2.317,3,0.275,4,0.332,5,0.238,7,0.353,10,1.035,11,0.955,12,1.443,14,0.97,15,1.323,17,1.949,19,0.674,21,1.23,22,0.031,23,1.23,24,1.23,30,2.012,33,0.275,34,0.02,35,0.02,42,1.23,43,1.955,54,1.93,59,1.739,62,0.882,63,1.697,64,0.685,67,0.634,74,2.203,76,1.801,77,3.1,81,1.217,86,1.323,101,2.745,109,2.491,114,1.046,115,1.323,128,1.93,131,1.217,227,1.93,232,4.001,233,1.93,234,3.027,235,2.979,236,2.979,237,4.155,238,4.155,239,3.475,240,2.979,241,2.491,242,2.491,243,2.979,244,2.491,245,2.979,246,2.979,247,2.979,248,2.979,249,2.979,250,2.979,251,1.93,252,2.491,253,2.17,254,2.979]],["title/classes/CreateGeolocationDto.html",[0,0.015,255,1.876]],["body/classes/CreateGeolocationDto.html",[0,0.02,2,1.351,3,0.28,4,0.243,5,0.243,7,0.36,8,1.722,11,1.551,13,2.149,14,0.931,17,1.967,19,0.847,22,0.031,33,0.28,34,0.02,35,0.02,47,2.32,64,0.558,73,1.351,172,2.149,173,2.149,174,3.049,175,3.385,178,2.544,182,2.732,183,3.525,186,2.732,188,1.613,190,3.555,195,3.049,255,2.461,256,4.588,257,2.544,258,4.216,259,3.042,260,3.042,261,3.042,262,3.042,263,3.042,264,3.526,265,3.526,266,3.042,267,3.042,268,4.216,269,4.216,270,3.042,271,2.544,272,2.544,273,3.042]],["title/injectables/CreateGeolocationUseCase.html",[114,0.809,274,1.704]],["body/injectables/CreateGeolocationUseCase.html",[0,0.012,3,0.232,4,0.201,5,0.201,7,0.298,10,0.874,11,0.807,13,1.118,14,0.656,15,1.118,18,1.631,19,0.777,21,1.09,22,0.031,23,1.09,24,1.09,30,2.667,33,0.232,34,0.017,35,0.017,42,1.09,43,1.78,59,1.469,61,1.631,62,0.745,63,1.505,64,0.675,67,0.536,68,1.631,76,1.64,81,1.028,86,1.118,88,1.118,102,1.665,114,0.927,115,1.118,117,1.834,119,2.387,128,2.387,131,1.028,172,1.118,173,1.118,212,2.105,233,1.631,234,2.683,241,2.105,244,2.105,251,2.823,252,2.105,255,2.799,274,1.953,275,3.644,276,2.823,277,2.105,278,3.683,279,2.517,280,2.105,281,2.105,282,3.683,283,2.517,284,2.31,285,2.517,286,2.517,287,2.517,288,1.834,289,1.834,290,1.834,291,1.834,292,2.387,293,2.683,294,2.683,295,1.834,296,2.105,297,2.105,298,2.517,299,2.517,300,2.105,301,2.517,302,2.517,303,3.683,304,3.683,305,3.683,306,2.517,307,2.517,308,3.683,309,2.517,310,3.081,311,2.517]],["title/injectables/CreateRoutingUseCase.html",[114,0.809,312,1.704]],["body/injectables/CreateRoutingUseCase.html",[0,0.014,3,0.28,4,0.243,5,0.243,7,0.36,10,1.057,14,0.751,15,1.351,19,0.683,21,1.248,22,0.031,23,1.248,24,1.248,30,1.473,33,0.28,34,0.02,35,0.02,42,1.248,43,1.977,62,0.9,63,1.722,64,0.64,67,0.647,76,1.822,81,1.243,86,1.351,114,1.061,115,1.351,131,1.243,194,1.873,223,2.378,233,1.971,234,3.071,251,1.971,277,2.544,288,2.216,289,2.216,290,2.216,291,2.216,292,2.732,293,3.071,294,3.071,295,2.216,296,2.544,297,2.544,312,2.235,313,4.046,314,3.135,315,3.042,316,2.77,317,3.042,318,3.526,319,4.216,320,2.216,321,1.971,322,2.544,323,2.544,324,3.042,325,2.544,326,3.042,327,3.042,328,3.042,329,2.544]],["title/classes/Geolocation.html",[0,0.015,284,1.704]],["body/classes/Geolocation.html",[0,0.015,2,1.416,3,0.294,4,0.255,5,0.255,7,0.377,8,1.779,9,4.563,10,2.176,11,1.709,13,2.478,14,0.994,15,1.934,17,2.006,18,3.453,19,0.904,21,0.944,22,0.029,23,0.944,24,0.944,33,0.294,34,0.021,35,0.021,172,2.478,173,2.478,174,3.502,284,2.309,330,2.666,331,2.666,332,3.188,333,3.188,334,3.188,335,3.188,336,3.188]],["title/controllers/GeolocationController.html",[36,1.313,337,2.082]],["body/controllers/GeolocationController.html",[0,0.014,3,0.28,4,0.243,5,0.243,7,0.36,10,1.057,14,0.542,19,0.493,21,0.9,22,0.031,23,0.9,24,0.9,33,0.28,34,0.02,35,0.02,36,1.243,38,1.243,40,2.216,42,1.248,43,1.977,44,2.235,45,2.544,47,1.351,48,2.216,49,2.732,52,3.071,53,2.77,57,3.071,58,2.732,59,2.461,61,2.732,62,0.9,64,0.691,65,2.216,66,2.732,67,0.647,68,1.971,70,2.216,71,3.525,72,3.071,73,1.351,75,1.613,76,1.145,78,1.613,81,1.243,82,2.216,83,1.873,84,2.216,85,2.544,88,1.351,89,2.732,255,3.049,274,2.235,276,1.971,280,2.544,284,1.613,337,2.732,338,2.544,339,3.042,340,4.046,341,2.544,342,3.042,343,3.042,344,3.526,345,3.042,346,3.042,347,3.042,348,3.042]],["title/modules/GeolocationModule.html",[90,1.116,148,1.876]],["body/modules/GeolocationModule.html",[0,0.017,3,0.329,4,0.285,5,0.285,22,0.031,33,0.329,34,0.022,35,0.022,38,1.92,64,0.738,67,0.76,75,1.894,76,1.345,78,1.894,90,1.824,92,1.587,93,1.587,94,1.894,95,1.894,96,1.587,97,2.784,98,1.894,102,2.067,103,2.491,104,1.894,105,1.894,148,3.593,274,3.155,276,2.314,281,2.987,337,3.403,349,2.987,350,2.987,351,3.572,352,3.572]],["title/interfaces/IAlertRepository.html",[124,2.082,353,1.876]],["body/interfaces/IAlertRepository.html",[1,2.85,3,0.38,4,0.329,5,0.329,7,0.487,14,0.734,19,0.668,21,1.219,22,0.03,23,1.219,24,1.219,33,0.38,34,0.024,35,0.024,42,1.524,44,2.73,62,1.219,63,2.104,64,0.545,124,3.336,125,3.751,131,1.683,242,3.445,353,2.404,354,3.001,355,3.001,356,4.306,357,3.445]],["title/interfaces/IRoutingRepository.html",[353,1.876,358,2.082]],["body/interfaces/IRoutingRepository.html",[3,0.38,4,0.329,5,0.329,7,0.487,14,0.734,19,0.668,21,1.219,22,0.03,23,1.219,24,1.219,33,0.38,34,0.024,35,0.024,42,1.524,44,2.73,62,1.219,63,2.104,64,0.545,131,1.683,223,2.404,320,3.001,353,2.404,354,3.001,355,3.001,356,4.306,357,3.445,358,3.336,359,3.751]],["title/modules/PrismaModule.html",[90,1.116,149,1.876]],["body/modules/PrismaModule.html",[0,0.018,3,0.347,4,0.3,5,0.3,22,0.03,33,0.347,34,0.023,35,0.023,64,0.643,67,0.8,90,1.87,92,1.67,93,1.67,94,1.993,95,1.993,96,1.67,97,2.854,98,2.854,102,2.231,103,2.576,104,1.993,105,1.993,149,3.584,360,3.144,361,3.144,362,3.759,363,3.759,364,4.858,365,3.759]],["title/injectables/PrismaService.html",[102,1.116,114,0.809]],["body/injectables/PrismaService.html",[0,0.014,3,0.276,4,0.24,5,0.24,7,0.355,19,0.677,22,0.031,33,0.276,34,0.02,35,0.02,42,1.236,43,2.309,62,1.236,64,0.552,67,0.638,86,1.854,102,1.45,114,1.051,115,1.332,127,2.185,194,2.702,251,2.705,288,3.041,289,3.041,290,3.041,291,3.041,292,2.705,293,3.041,294,3.041,295,3.041,323,3.492,325,3.492,366,2.508,367,4.175,368,4.802,369,5.652,370,5.652,371,2.999,372,2.999,373,2.999,374,2.999,375,4.175,376,2.999,377,4.175,378,4.175,379,2.999,380,2.999]],["title/classes/Routing.html",[0,0.015,223,1.313]],["body/classes/Routing.html",[0,0.012,2,1.105,3,0.229,4,0.199,5,0.199,7,0.294,8,1.492,9,4.615,11,1.529,13,2.256,14,1.108,15,1.622,17,1.795,18,3.44,19,0.912,21,0.736,22,0.031,23,0.736,24,0.736,28,2.081,29,1.812,30,1.769,33,0.229,34,0.017,35,0.017,83,2.256,172,1.922,173,1.922,174,3.408,193,2.783,194,2.118,201,3.291,202,3.291,204,2.964,207,2.964,223,1.492,239,4.803,331,2.081,381,2.081,382,2.488,383,2.488,384,2.488,385,2.488,386,2.488,387,2.488,388,2.488,389,2.488]],["title/controllers/RoutingController.html",[36,1.313,390,2.082]],["body/controllers/RoutingController.html",[0,0.013,3,0.255,4,0.221,5,0.221,7,0.328,10,0.961,12,1.34,14,0.493,19,0.449,21,0.819,22,0.031,23,0.819,24,0.819,30,1.34,33,0.255,34,0.019,35,0.019,36,1.131,38,1.131,40,2.016,42,1.168,43,1.878,47,1.229,48,2.016,49,2.556,52,2.874,53,2.657,57,2.874,58,2.556,59,2.303,61,2.556,62,0.819,63,1.612,64,0.701,65,2.016,66,2.556,67,0.589,68,1.793,70,2.016,71,3.349,72,2.874,73,1.229,75,1.467,76,1.042,78,1.467,81,1.131,82,2.016,83,1.752,84,2.016,86,1.229,88,1.229,89,2.556,128,1.793,131,1.131,198,2.925,219,3.651,223,2.164,300,2.315,312,2.437,314,1.793,320,2.016,341,2.315,344,3.299,390,2.556,391,2.315,392,3.945,393,2.768,394,2.768,395,2.768,396,2.768,397,2.768,398,2.768,399,2.768,400,2.768,401,2.768,402,2.768,403,2.768,404,2.768,405,2.768,406,2.768,407,2.315,408,2.315]],["title/classes/RoutingDto.html",[0,0.015,198,1.876]],["body/classes/RoutingDto.html",[0,0.022,2,1.033,3,0.214,4,0.186,5,0.186,7,0.275,8,1.42,11,1.334,14,1.063,17,1.308,19,0.84,22,0.031,33,0.214,34,0.016,35,0.016,47,2.301,64,0.55,73,1.033,83,1.848,161,1.695,169,3.868,170,3.479,171,1.507,172,1.033,173,1.033,174,2.694,175,2.696,180,2.906,181,1.946,182,2.252,183,3.362,184,3.479,185,2.906,186,2.252,187,3.859,188,1.233,189,1.695,190,3.656,191,1.946,192,3.031,193,2.428,194,1.544,195,2.883,196,1.695,197,1.695,198,2.028,199,2.906,200,1.946,201,2.696,202,2.696,203,1.946,204,2.428,205,1.946,206,1.695,207,2.428,409,2.326,410,2.326,411,4.16,412,3.475,413,2.326,414,2.326,415,2.326,416,2.326,417,2.326,418,2.326,419,2.326,420,2.326,421,2.326]],["title/modules/RoutingModule.html",[90,1.116,150,1.876]],["body/modules/RoutingModule.html",[0,0.015,3,0.299,4,0.259,5,0.259,22,0.031,33,0.299,34,0.021,35,0.021,38,1.802,64,0.743,67,0.691,75,1.722,76,1.223,78,1.722,90,1.739,92,1.443,93,1.443,94,1.722,95,1.722,96,1.443,97,2.655,98,1.722,102,2.011,103,2.338,104,1.722,105,1.722,107,2.717,110,2.366,111,2.717,113,2.717,150,3.606,312,3.07,314,2.105,316,3.14,318,2.717,321,2.105,322,2.717,390,3.245,422,2.717,423,2.717,424,3.248,425,3.248]],["title/injectables/RoutingPrismaRepository.html",[114,0.809,316,1.704]],["body/injectables/RoutingPrismaRepository.html",[0,0.012,3,0.236,4,0.205,5,0.205,7,0.303,10,0.89,11,0.821,13,1.138,14,0.784,15,1.138,19,0.713,21,1.303,22,0.031,23,1.303,24,1.303,33,0.236,34,0.018,35,0.018,42,1.104,43,2.191,44,1.978,62,1.104,63,1.975,64,0.64,67,0.545,81,1.047,83,1.138,86,1.657,88,1.138,102,1.679,114,0.939,115,1.138,117,1.866,119,2.418,122,2.143,126,1.866,127,1.866,131,1.524,172,1.138,173,1.138,204,1.495,207,1.495,223,2.433,225,2.143,227,1.66,253,1.866,316,1.978,321,3.133,329,3.121,358,2.418,359,1.866,426,2.143,427,2.562,428,3.731,429,2.562,430,3.731,431,2.562,432,2.562,433,2.562,434,2.562,435,2.562,436,2.562,437,2.562,438,2.562,439,2.562,440,2.562,441,2.562,442,2.562,443,2.562,444,2.562,445,2.562,446,2.562,447,2.562,448,2.562,449,2.562,450,2.562,451,3.731,452,2.143,453,2.143,454,2.562,455,2.143,456,2.143,457,2.562,458,2.562,459,2.143,460,2.562,461,2.562,462,2.562]],["title/coverage.html",[463,3.661]],["body/coverage.html",[0,0.027,1,1.303,5,0.215,6,2.25,14,0.479,22,0.031,30,1.303,34,0.018,35,0.018,36,2.021,37,1.743,39,2.25,46,1.743,74,1.426,76,1.703,77,1.743,96,1.195,101,1.426,102,0.934,114,1.414,116,2.25,124,1.743,125,1.96,137,1.743,138,2.25,141,1.426,164,2.25,169,1.743,170,2.505,171,2.505,198,1.57,208,2.25,209,2.25,223,1.099,232,2.25,233,2.932,255,1.57,256,2.25,257,2.25,274,1.426,275,2.25,276,1.743,284,1.426,310,5.347,312,1.426,313,2.25,314,1.743,316,1.426,321,1.743,330,2.25,337,1.743,338,2.25,353,2.256,355,2.816,358,1.743,359,1.96,366,2.25,381,2.25,390,1.743,391,2.25,426,2.25,463,2.25,464,2.25,465,2.69,466,2.69,467,5.62,468,5.455,469,2.69,470,2.25,471,2.69,472,2.69,473,3.865,474,3.865,475,2.69,476,2.69,477,2.69,478,2.69]],["title/dependencies.html",[93,1.716,479,2.247]],["body/dependencies.html",[0,0.024,22,0.031,34,0.024,35,0.024,67,0.872,73,1.821,93,1.821,154,3.428,163,2.986,188,2.173,189,2.986,480,5.605,481,4.099,482,4.099,483,4.099,484,5.134,485,4.099,486,4.099,487,4.099,488,4.099,489,4.099,490,4.099,491,4.099,492,4.099,493,4.099,494,4.099,495,3.428,496,3.428,497,4.099]],["title/miscellaneous/enumerations.html",[498,1.741,499,3.231]],["body/miscellaneous/enumerations.html",[7,0.548,22,0.029,29,4.028,34,0.026,35,0.026,170,2.999,171,3.583,192,4.028,193,3.227,194,2.456,498,2.999,499,3.871,500,4.628]],["title/miscellaneous/functions.html",[498,1.741,501,3.231]],["body/miscellaneous/functions.html",[7,0.576,22,0.027,34,0.027,35,0.027,96,2.682,470,4.068,498,3.152,501,4.068,502,4.864]],["title/index.html",[7,0.318,503,2.687,504,2.687]],["body/index.html",[0,0.008,1,0.808,4,0.133,11,1.356,12,1.631,13,1.496,14,0.297,22,0.029,34,0.013,35,0.013,41,1.395,49,1.081,50,2.817,53,0.884,54,1.081,58,1.739,66,2.182,83,0.741,89,1.081,119,1.081,126,1.955,131,0.682,163,1.215,166,1.215,167,4.328,172,2.007,173,2.007,188,0.884,193,0.974,194,0.741,195,3.318,196,1.215,197,1.215,201,1.081,202,1.081,204,0.974,206,1.215,207,0.974,213,1.395,216,1.395,217,1.395,218,1.395,219,1.215,220,1.395,223,1.728,224,1.395,227,2.501,229,1.395,253,2.454,264,1.395,265,1.395,271,2.245,272,1.395,284,1.423,292,1.081,340,1.395,407,1.395,408,1.395,452,1.395,453,2.245,455,1.395,456,1.395,459,1.395,464,1.395,495,2.245,496,1.395,505,1.668,506,1.668,507,1.668,508,2.684,509,1.668,510,1.668,511,1.668,512,2.684,513,1.668,514,1.668,515,4.941,516,1.668,517,2.684,518,1.668,519,1.668,520,1.668,521,4.23,522,1.668,523,2.684,524,1.668,525,2.684,526,1.668,527,1.668,528,1.668,529,4.23,530,1.668,531,1.668,532,1.668,533,1.668,534,1.668,535,1.668,536,1.668,537,1.668,538,1.668,539,1.668,540,1.668,541,1.668,542,1.668,543,2.684,544,1.668,545,1.668,546,1.668,547,3.368,548,1.668,549,3.368,550,1.668,551,1.668,552,1.668,553,1.668,554,1.668,555,1.668,556,1.668,557,1.668,558,1.668,559,1.668,560,3.368,561,1.668,562,3.368,563,1.668,564,1.668,565,1.668,566,1.668,567,1.668,568,1.668,569,1.668,570,1.668,571,4.751,572,2.684,573,1.668,574,1.668,575,1.668,576,2.684,577,1.668,578,1.668,579,1.668,580,2.684,581,1.668,582,1.668,583,1.668,584,1.668,585,2.684,586,1.668,587,1.668,588,4.519,589,1.668,590,1.668,591,1.668,592,2.684,593,1.668,594,1.668,595,1.668,596,1.668,597,3.368,598,1.668,599,3.368,600,2.684,601,2.684,602,1.668,603,3.368,604,1.668,605,1.668,606,1.668,607,1.668,608,1.668,609,1.668,610,1.668,611,1.668,612,1.668,613,1.668,614,1.395,615,2.684,616,1.668,617,1.668,618,1.668,619,1.668,620,1.668,621,1.668,622,1.668,623,1.668,624,1.668,625,1.668,626,1.668,627,1.668,628,1.668,629,1.668,630,1.668,631,1.668,632,3.368,633,2.684,634,1.668,635,1.668,636,1.668,637,1.668]],["title/modules.html",[92,1.945]],["body/modules.html",[22,0.026,34,0.026,35,0.026,91,2.577,92,1.961,144,2.861,148,2.577,149,2.577,150,2.577,638,6.18,639,6.18,640,6.18,641,6.18]],["title/overview.html",[642,3.661]],["body/overview.html",[2,1.328,22,0.03,34,0.02,35,0.02,38,1.221,74,2.541,90,1.038,91,3.503,92,1.328,93,1.328,94,1.585,95,1.585,96,1.328,97,1.585,98,1.585,99,2.5,100,2.5,101,2.541,102,2.111,103,2.208,104,1.585,105,1.585,115,1.328,141,2.541,144,4.015,145,2.5,146,2.5,147,2.5,148,3.381,149,3.295,150,3.503,274,2.541,312,2.541,316,2.541,349,2.5,350,2.5,354,2.177,360,2.5,361,2.5,422,2.5,423,2.5,614,2.5,642,2.5,643,2.989,644,2.989,645,4.165]],["title/properties.html",[8,1.578,479,2.247]],["body/properties.html",[8,1.954,22,0.03,34,0.027,35,0.027,53,2.536,646,4.783,647,4.783,648,4.783,649,4.783,650,4.783]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":310,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"coverage.html":{}}}],["0.0.1",{"_index":647,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["001",{"_index":200,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}],["001'})@isstring()@isnotempty",{"_index":414,"title":{},"body":{"classes/RoutingDto.html":{}}}],["04",{"_index":265,"title":{},"body":{"classes/CreateGeolocationDto.html":{},"index.html":{}}}],["11.0.1",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["11.1.3",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["112",{"_index":601,"title":{},"body":{"index.html":{}}}],["123",{"_index":607,"title":{},"body":{"index.html":{}}}],["15t17:05:00.000z",{"_index":273,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["15t17:05:00.000z'})@isiso8601()@isoptional",{"_index":266,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["16t16:37:31.125z",{"_index":604,"title":{},"body":{"index.html":{}}}],["2",{"_index":614,"title":{},"body":{"index.html":{},"overview.html":{}}}],["201",{"_index":52,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["2025",{"_index":264,"title":{},"body":{"classes/CreateGeolocationDto.html":{},"index.html":{}}}],["222",{"_index":270,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["222'})@isstring()@isnotempty",{"_index":259,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["255",{"_index":211,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["300",{"_index":206,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{},"index.html":{}}}],["300})@isnumber()@ispositive",{"_index":409,"title":{},"body":{"classes/RoutingDto.html":{}}}],["4",{"_index":644,"title":{},"body":{"overview.html":{}}}],["4.0.2",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["4.123",{"_index":608,"title":{},"body":{"index.html":{}}}],["4.222",{"_index":610,"title":{},"body":{"index.html":{}}}],["4.567",{"_index":196,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{},"index.html":{}}}],["4.567})@isnumber",{"_index":176,"title":{},"body":{"classes/Coordinates.html":{}}}],["4.710989",{"_index":271,"title":{},"body":{"classes/CreateGeolocationDto.html":{},"index.html":{}}}],["4.710989})@isnumber",{"_index":261,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["400",{"_index":57,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["5",{"_index":643,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":645,"title":{},"body":{"overview.html":{}}}],["7.0.3",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["74.07209",{"_index":272,"title":{},"body":{"classes/CreateGeolocationDto.html":{},"index.html":{}}}],["74.072090",{"_index":602,"title":{},"body":{"index.html":{}}}],["74.123",{"_index":609,"title":{},"body":{"index.html":{}}}],["74.222",{"_index":611,"title":{},"body":{"index.html":{}}}],["74.567",{"_index":197,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{},"index.html":{}}}],["aaa",{"_index":258,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["abd",{"_index":606,"title":{},"body":{"index.html":{}}}],["access",{"_index":297,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{}}}],["activa",{"_index":627,"title":{},"body":{"index.html":{}}}],["actúa",{"_index":535,"title":{},"body":{"index.html":{}}}],["adaptadores",{"_index":630,"title":{},"body":{"index.html":{}}}],["al",{"_index":217,"title":{},"body":{"classes/CreateAlertDto.html":{},"index.html":{}}}],["alert",{"_index":1,"title":{"classes/Alert.html":{}},"body":{"classes/Alert.html":{},"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"interfaces/IAlertRepository.html":{},"coverage.html":{},"index.html":{}}}],["alert.deviceid",{"_index":135,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["alert.dto",{"_index":69,"title":{},"body":{"controllers/AlertController.html":{}}}],["alert.dto.ts",{"_index":209,"title":{},"body":{"classes/CreateAlertDto.html":{},"coverage.html":{}}}],["alert.dto.ts:16",{"_index":222,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["alert.dto.ts:24",{"_index":228,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["alert.dto.ts:29",{"_index":215,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["alert.dto.ts:8",{"_index":230,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["alert.message",{"_index":133,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["alert.source",{"_index":134,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["alert.spec",{"_index":245,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["alert.timestamp",{"_index":136,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["alert.type",{"_index":132,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["alert.use",{"_index":77,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/CreateAlertUseCase.html":{},"coverage.html":{}}}],["alerta",{"_index":54,"title":{},"body":{"controllers/AlertController.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"index.html":{}}}],["alerta'})@apiresponse({status",{"_index":51,"title":{},"body":{"controllers/AlertController.html":{}}}],["alerta'})@isstring()@isnotempty",{"_index":221,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["alertas",{"_index":525,"title":{},"body":{"index.html":{}}}],["alertcontroller",{"_index":37,"title":{"controllers/AlertController.html":{}},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"coverage.html":{}}}],["alertmodule",{"_index":91,"title":{"modules/AlertModule.html":{}},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["alertprismarepository",{"_index":101,"title":{"injectables/AlertPrismaRepository.html":{}},"body":{"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["alertrepository",{"_index":112,"title":{},"body":{"modules/AlertModule.html":{}}}],["alerts",{"_index":41,"title":{},"body":{"controllers/AlertController.html":{},"index.html":{}}}],["alertsparámetros",{"_index":612,"title":{},"body":{"index.html":{}}}],["alertspecification",{"_index":243,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["alertspecification.issatisfiedby(alert",{"_index":250,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["almacenar",{"_index":516,"title":{},"body":{"index.html":{}}}],["análisis",{"_index":541,"title":{},"body":{"index.html":{}}}],["api",{"_index":560,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":344,"title":{},"body":{"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["apioperation",{"_index":72,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["apiproperty",{"_index":190,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"classes/RoutingDto.html":{}}}],["apiproperty({example",{"_index":175,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"classes/RoutingDto.html":{}}}],["apiproperty({type",{"_index":411,"title":{},"body":{"classes/RoutingDto.html":{}}}],["apiresponse",{"_index":71,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["apitags",{"_index":70,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["apitags('alerts",{"_index":79,"title":{},"body":{"controllers/AlertController.html":{}}}],["apitags('geolocation",{"_index":345,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["apitags('routing",{"_index":397,"title":{},"body":{"controllers/RoutingController.html":{}}}],["app.controller",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":142,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":137,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":144,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":141,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archivo",{"_index":578,"title":{},"body":{"index.html":{}}}],["arquitectura",{"_index":529,"title":{},"body":{"index.html":{}}}],["asd",{"_index":600,"title":{},"body":{"index.html":{}}}],["async",{"_index":43,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"controllers/GeolocationController.html":{},"injectables/PrismaService.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["audit",{"_index":597,"title":{},"body":{"index.html":{}}}],["auditoria",{"_index":168,"title":{},"body":{"injectables/AppService.html":{}}}],["auditoría",{"_index":513,"title":{},"body":{"index.html":{}}}],["author",{"_index":650,"title":{},"body":{"properties.html":{}}}],["await",{"_index":86,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["badrequestexception",{"_index":241,"title":{},"body":{"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{}}}],["badrequestexception('datos",{"_index":252,"title":{},"body":{"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{}}}],["bbva",{"_index":511,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":624,"title":{},"body":{"index.html":{}}}],["bitácora",{"_index":537,"title":{},"body":{"index.html":{}}}],["body",{"_index":65,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["bootstrap",{"_index":96,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":641,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":638,"title":{},"body":{"modules.html":{}}}],["cachettl",{"_index":207,"title":{},"body":{"classes/Coordinates.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["calculada",{"_index":399,"title":{},"body":{"controllers/RoutingController.html":{}}}],["calculada'})@apiresponse({status",{"_index":394,"title":{},"body":{"controllers/RoutingController.html":{}}}],["calculadas",{"_index":524,"title":{},"body":{"index.html":{}}}],["calcular",{"_index":218,"title":{},"body":{"classes/CreateAlertDto.html":{},"index.html":{}}}],["call",{"_index":295,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{}}}],["características",{"_index":548,"title":{},"body":{"index.html":{}}}],["case",{"_index":78,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"controllers/RoutingController.html":{},"modules/RoutingModule.html":{}}}],["case.ts",{"_index":233,"title":{},"body":{"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"coverage.html":{}}}],["case.ts:10",{"_index":240,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["case.ts:12",{"_index":279,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["case.ts:6",{"_index":317,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{}}}],["case.ts:7",{"_index":236,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["case.ts:9",{"_index":277,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{}}}],["cases/create",{"_index":76,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"controllers/RoutingController.html":{},"modules/RoutingModule.html":{},"coverage.html":{}}}],["catch",{"_index":325,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{}}}],["central",{"_index":538,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/Alert.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{}},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Alert.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"overview.html":{}}}],["cluster_alertmodule",{"_index":99,"title":{},"body":{"modules/AlertModule.html":{},"overview.html":{}}}],["cluster_alertmodule_providers",{"_index":100,"title":{},"body":{"modules/AlertModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_geolocationmodule",{"_index":349,"title":{},"body":{"modules/GeolocationModule.html":{},"overview.html":{}}}],["cluster_geolocationmodule_providers",{"_index":350,"title":{},"body":{"modules/GeolocationModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":360,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":361,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":362,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_routingmodule",{"_index":422,"title":{},"body":{"modules/RoutingModule.html":{},"overview.html":{}}}],["cluster_routingmodule_providers",{"_index":423,"title":{},"body":{"modules/RoutingModule.html":{},"overview.html":{}}}],["cobertura",{"_index":636,"title":{},"body":{"index.html":{}}}],["como",{"_index":536,"title":{},"body":{"index.html":{}}}],["compose",{"_index":573,"title":{},"body":{"index.html":{}}}],["con",{"_index":521,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["connecting",{"_index":376,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.error",{"_index":375,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.error('error",{"_index":326,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{}}}],["const",{"_index":128,"title":{},"body":{"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"controllers/RoutingController.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/Alert.html":{},"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["constructor(deviceid",{"_index":331,"title":{},"body":{"classes/Geolocation.html":{},"classes/Routing.html":{}}}],["constructor(prisma",{"_index":117,"title":{},"body":{"injectables/AlertPrismaRepository.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["constructor(private",{"_index":81,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["constructor(repo",{"_index":235,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["constructor(routingrepository",{"_index":315,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{}}}],["constructor(type",{"_index":16,"title":{},"body":{"classes/Alert.html":{}}}],["construido",{"_index":544,"title":{},"body":{"index.html":{}}}],["consulta",{"_index":599,"title":{},"body":{"index.html":{}}}],["containerizada",{"_index":575,"title":{},"body":{"index.html":{}}}],["control",{"_index":533,"title":{},"body":{"index.html":{}}}],["controller",{"_index":36,"title":{"controllers/AlertController.html":{},"controllers/AppController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}},"body":{"controllers/AlertController.html":{},"controllers/AppController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"coverage.html":{}}}],["controller('alerts",{"_index":80,"title":{},"body":{"controllers/AlertController.html":{}}}],["controller('geolocation",{"_index":346,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["controller('routing",{"_index":398,"title":{},"body":{"controllers/RoutingController.html":{}}}],["controllers",{"_index":38,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"controllers/RoutingController.html":{},"modules/RoutingModule.html":{},"overview.html":{}}}],["controllers/alert.controller",{"_index":108,"title":{},"body":{"modules/AlertModule.html":{}}}],["controllers/geolocation.controller",{"_index":352,"title":{},"body":{"modules/GeolocationModule.html":{}}}],["controllers/routing.controller",{"_index":425,"title":{},"body":{"modules/RoutingModule.html":{}}}],["conversión",{"_index":509,"title":{},"body":{"index.html":{}}}],["coordinates",{"_index":169,"title":{"classes/Coordinates.html":{}},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{},"coverage.html":{}}}],["coordinates})@isobject()@validatenested()@type(undefined",{"_index":412,"title":{},"body":{"classes/RoutingDto.html":{}}}],["correctamente",{"_index":84,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["correctamente'})@apiresponse({status",{"_index":341,"title":{},"body":{"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["correctamente.'})@apiresponse({status",{"_index":56,"title":{},"body":{"controllers/AlertController.html":{}}}],["coverage",{"_index":463,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creada",{"_index":55,"title":{},"body":{"controllers/AlertController.html":{}}}],["crear",{"_index":452,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["create",{"_index":44,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/GeolocationController.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["create(@body",{"_index":85,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{}}}],["create(alert",{"_index":120,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["create(data",{"_index":356,"title":{},"body":{"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{}}}],["create(dto",{"_index":45,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{}}}],["create(routing",{"_index":428,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["createalertdto",{"_index":46,"title":{"classes/CreateAlertDto.html":{}},"body":{"controllers/AlertController.html":{},"classes/CreateAlertDto.html":{},"coverage.html":{}}}],["createalertusecase",{"_index":74,"title":{"injectables/CreateAlertUseCase.html":{}},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/CreateAlertUseCase.html":{},"coverage.html":{},"overview.html":{}}}],["createdalert",{"_index":129,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["creategeolocationdto",{"_index":255,"title":{"classes/CreateGeolocationDto.html":{}},"body":{"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"controllers/GeolocationController.html":{},"coverage.html":{}}}],["creategeolocationusecase",{"_index":274,"title":{"injectables/CreateGeolocationUseCase.html":{}},"body":{"injectables/CreateGeolocationUseCase.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"coverage.html":{},"overview.html":{}}}],["createmany",{"_index":446,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["createroutingusecase",{"_index":312,"title":{"injectables/CreateRoutingUseCase.html":{}},"body":{"injectables/CreateRoutingUseCase.html":{},"controllers/RoutingController.html":{},"modules/RoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["createusecase",{"_index":347,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["cross",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["cualquier",{"_index":460,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["data",{"_index":131,"title":{},"body":{"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["data.deviceid",{"_index":249,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["data.message",{"_index":247,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["data.source",{"_index":248,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["data.type",{"_index":246,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["database",{"_index":377,"title":{},"body":{"injectables/PrismaService.html":{}}}],["database/prisma.service",{"_index":122,"title":{},"body":{"injectables/AlertPrismaRepository.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["database_url=postgresql://postgres:postgres@db:5432/audit_db",{"_index":583,"title":{},"body":{"index.html":{}}}],["date",{"_index":18,"title":{},"body":{"classes/Alert.html":{},"injectables/CreateGeolocationUseCase.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{}}}],["date(geo.timestamp",{"_index":311,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["datos",{"_index":58,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"index.html":{}}}],["de",{"_index":167,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateAlertDto.html":{},"index.html":{}}}],["declarations",{"_index":95,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"overview.html":{}}}],["decorators",{"_index":47,"title":{},"body":{"controllers/AlertController.html":{},"controllers/AppController.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{}}}],["default",{"_index":28,"title":{},"body":{"classes/Alert.html":{},"classes/Routing.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["del",{"_index":213,"title":{},"body":{"classes/CreateAlertDto.html":{},"index.html":{}}}],["dependencies",{"_index":93,"title":{"dependencies.html":{}},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":53,"title":{},"body":{"controllers/AlertController.html":{},"classes/CreateAlertDto.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":202,"title":{},"body":{"classes/Coordinates.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"index.html":{}}}],["destinationlat",{"_index":439,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["destinationlng",{"_index":441,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["destino",{"_index":552,"title":{},"body":{"index.html":{}}}],["development",{"_index":589,"title":{},"body":{"index.html":{}}}],["deviceid",{"_index":11,"title":{},"body":{"classes/Alert.html":{},"injectables/AlertPrismaRepository.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["disable",{"_index":289,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{}}}],["disconnecting",{"_index":380,"title":{},"body":{"injectables/PrismaService.html":{}}}],["disponible",{"_index":616,"title":{},"body":{"index.html":{}}}],["dispositivo",{"_index":231,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["dispositivo'})@isstring()@isnotempty",{"_index":214,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["dispositivos",{"_index":522,"title":{},"body":{"index.html":{}}}],["docker",{"_index":572,"title":{},"body":{"index.html":{}}}],["documentación",{"_index":615,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":464,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":61,"title":{},"body":{"controllers/AlertController.html":{},"injectables/CreateGeolocationUseCase.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["dto.cachettl",{"_index":405,"title":{},"body":{"controllers/RoutingController.html":{}}}],["dto.destination",{"_index":402,"title":{},"body":{"controllers/RoutingController.html":{}}}],["dto.deviceid",{"_index":300,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"controllers/RoutingController.html":{}}}],["dto.lat",{"_index":301,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["dto.lng",{"_index":302,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["dto.origin",{"_index":401,"title":{},"body":{"controllers/RoutingController.html":{}}}],["dto.route",{"_index":403,"title":{},"body":{"controllers/RoutingController.html":{}}}],["dto.status",{"_index":404,"title":{},"body":{"controllers/RoutingController.html":{}}}],["dto/create",{"_index":68,"title":{},"body":{"controllers/AlertController.html":{},"injectables/CreateGeolocationUseCase.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["dtos",{"_index":559,"title":{},"body":{"index.html":{}}}],["each",{"_index":203,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}],["ejecutar",{"_index":633,"title":{},"body":{"index.html":{}}}],["ejemplos",{"_index":621,"title":{},"body":{"index.html":{}}}],["el",{"_index":512,"title":{},"body":{"index.html":{}}}],["en",{"_index":562,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":596,"title":{},"body":{"index.html":{}}}],["entities/alert.entity",{"_index":242,"title":{},"body":{"injectables/CreateAlertUseCase.html":{},"interfaces/IAlertRepository.html":{}}}],["entities/geolocation.entity",{"_index":285,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["entities/routing.entity",{"_index":320,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{},"interfaces/IRoutingRepository.html":{},"controllers/RoutingController.html":{}}}],["entorno",{"_index":577,"title":{},"body":{"index.html":{}}}],["enum",{"_index":191,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}],["enumerations",{"_index":499,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["envfilepath",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":194,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["error('device",{"_index":309,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["error('failed",{"_index":328,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{}}}],["error('latitude",{"_index":306,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["error).message",{"_index":378,"title":{},"body":{"injectables/PrismaService.html":{}}}],["es",{"_index":456,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["eslint",{"_index":288,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{}}}],["eslint/no",{"_index":293,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{}}}],["est",{"_index":543,"title":{},"body":{"index.html":{}}}],["estado",{"_index":554,"title":{},"body":{"index.html":{}}}],["este",{"_index":527,"title":{},"body":{"index.html":{}}}],["estructurada",{"_index":518,"title":{},"body":{"index.html":{}}}],["example",{"_index":195,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"classes/RoutingDto.html":{},"index.html":{}}}],["execute",{"_index":234,"title":{},"body":{"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{}}}],["execute(data",{"_index":238,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["execute(dto",{"_index":278,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["execute(routing",{"_index":319,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["exports",{"_index":98,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"overview.html":{}}}],["express",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":367,"title":{},"body":{"injectables/PrismaService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{}}}],["flotas",{"_index":534,"title":{},"body":{"index.html":{}}}],["forma",{"_index":517,"title":{},"body":{"index.html":{}}}],["framework",{"_index":506,"title":{},"body":{"index.html":{}}}],["function",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":501,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gener",{"_index":226,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["generadas",{"_index":526,"title":{},"body":{"index.html":{}}}],["geo",{"_index":298,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["geo.deviceid",{"_index":308,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["geo.lat",{"_index":303,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["geo.lng",{"_index":305,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["geolocalizaciones",{"_index":550,"title":{},"body":{"index.html":{}}}],["geolocalización",{"_index":340,"title":{},"body":{"controllers/GeolocationController.html":{},"index.html":{}}}],["geolocalización'})@apiresponse({status",{"_index":339,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["geolocation",{"_index":284,"title":{"classes/Geolocation.html":{}},"body":{"injectables/CreateGeolocationUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"coverage.html":{},"index.html":{}}}],["geolocation.dto",{"_index":280,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"controllers/GeolocationController.html":{}}}],["geolocation.dto.ts",{"_index":257,"title":{},"body":{"classes/CreateGeolocationDto.html":{},"coverage.html":{}}}],["geolocation.dto.ts:14",{"_index":260,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["geolocation.dto.ts:18",{"_index":262,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["geolocation.dto.ts:22",{"_index":263,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["geolocation.dto.ts:27",{"_index":267,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["geolocation.spec",{"_index":283,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["geolocation.use",{"_index":276,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"coverage.html":{}}}],["geolocationcontroller",{"_index":337,"title":{"controllers/GeolocationController.html":{}},"body":{"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"coverage.html":{}}}],["geolocationmodule",{"_index":148,"title":{"modules/GeolocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules.html":{},"overview.html":{}}}],["geolocationparámetros",{"_index":598,"title":{},"body":{"index.html":{}}}],["gethello",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":503,"title":{"index.html":{}},"body":{}}],["global",{"_index":364,"title":{},"body":{"modules/PrismaModule.html":{}}}],["hexagonal",{"_index":547,"title":{},"body":{"index.html":{}}}],["http://localhost:3003/api/docsincluye",{"_index":617,"title":{},"body":{"index.html":{}}}],["http://localhost:3003/documentation",{"_index":631,"title":{},"body":{"index.html":{}}}],["ialertrepository",{"_index":124,"title":{"interfaces/IAlertRepository.html":{}},"body":{"injectables/AlertPrismaRepository.html":{},"interfaces/IAlertRepository.html":{},"coverage.html":{}}}],["id",{"_index":212,"title":{},"body":{"classes/CreateAlertDto.html":{},"injectables/CreateGeolocationUseCase.html":{}}}],["identifier",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["implementa",{"_index":450,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["implements",{"_index":127,"title":{},"body":{"injectables/AlertPrismaRepository.html":{},"injectables/PrismaService.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["import",{"_index":64,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["imports",{"_index":110,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/RoutingModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"injectables/RoutingPrismaRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["infrastructure/database/prisma.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["infrastructure/database/prisma.service",{"_index":281,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"modules/GeolocationModule.html":{}}}],["injectable",{"_index":114,"title":{"injectables/AlertPrismaRepository.html":{},"injectables/AppService.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{},"injectables/RoutingPrismaRepository.html":{}},"body":{"injectables/AlertPrismaRepository.html":{},"injectables/AppService.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{}}}],["injectables",{"_index":115,"title":{},"body":{"injectables/AlertPrismaRepository.html":{},"injectables/AppService.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{},"injectables/RoutingPrismaRepository.html":{},"overview.html":{}}}],["installcompile",{"_index":587,"title":{},"body":{"index.html":{}}}],["interface",{"_index":353,"title":{"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{}},"body":{"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"coverage.html":{}}}],["interfaces",{"_index":354,"title":{},"body":{"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"overview.html":{}}}],["inválidos",{"_index":59,"title":{},"body":{"controllers/AlertController.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["iroutingrepository",{"_index":358,"title":{"interfaces/IRoutingRepository.html":{}},"body":{"interfaces/IRoutingRepository.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{}}}],["isarray",{"_index":180,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}],["isenum",{"_index":181,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}],["isenum(routingstatus",{"_index":205,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}],["isglobal",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["isiso8601",{"_index":269,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["isnotempty",{"_index":182,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"classes/RoutingDto.html":{}}}],["isnumber",{"_index":183,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateGeolocationDto.html":{},"classes/RoutingDto.html":{}}}],["isobject",{"_index":184,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}],["isoptional",{"_index":268,"title":{},"body":{"classes/CreateGeolocationDto.html":{}}}],["ispositive",{"_index":185,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}],["isstring",{"_index":186,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"classes/RoutingDto.html":{}}}],["jjj",{"_index":210,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["la",{"_index":227,"title":{},"body":{"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["las",{"_index":581,"title":{},"body":{"index.html":{}}}],["lat",{"_index":172,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["legend",{"_index":94,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"overview.html":{}}}],["license",{"_index":648,"title":{},"body":{"properties.html":{}}}],["limpia",{"_index":566,"title":{},"body":{"index.html":{}}}],["line",{"_index":291,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{}}}],["literal",{"_index":239,"title":{},"body":{"injectables/CreateAlertUseCase.html":{},"classes/Routing.html":{}}}],["lng",{"_index":173,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["longitude",{"_index":307,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["los",{"_index":519,"title":{},"body":{"index.html":{}}}],["lógica",{"_index":451,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["matching",{"_index":35,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mediante",{"_index":558,"title":{},"body":{"index.html":{}}}],["member",{"_index":296,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{}}}],["mensaje",{"_index":220,"title":{},"body":{"classes/CreateAlertDto.html":{},"index.html":{}}}],["message",{"_index":12,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"controllers/RoutingController.html":{},"index.html":{}}}],["metadata",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":42,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"controllers/GeolocationController.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"injectables/PrismaService.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["microservicio",{"_index":508,"title":{},"body":{"index.html":{}}}],["microservicios",{"_index":530,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":498,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mode",{"_index":592,"title":{},"body":{"index.html":{}}}],["module",{"_index":90,"title":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{}},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"overview.html":{}}}],["modules",{"_index":92,"title":{"modules.html":{}},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/alert/alert.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/geolocation/geolocation.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/routing/routing.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["monedas",{"_index":510,"title":{},"body":{"index.html":{}}}],["monitoreo",{"_index":532,"title":{},"body":{"index.html":{}}}],["módulo",{"_index":620,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["necesario",{"_index":457,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["necesites",{"_index":462,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["nest",{"_index":505,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":545,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":67,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/RoutingController.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":73,"title":{},"body":{"controllers/AlertController.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"dependencies.html":{}}}],["new",{"_index":30,"title":{},"body":{"classes/Alert.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"coverage.html":{}}}],["next",{"_index":290,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{}}}],["node.js",{"_index":568,"title":{},"body":{"index.html":{}}}],["npm",{"_index":571,"title":{},"body":{"index.html":{}}}],["nuevo",{"_index":454,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["number",{"_index":174,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateGeolocationDto.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{}}}],["o",{"_index":459,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["onmoduledestroy",{"_index":369,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":370,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":24,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["origen",{"_index":551,"title":{},"body":{"index.html":{}}}],["origin",{"_index":201,"title":{},"body":{"classes/Coordinates.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"index.html":{}}}],["originlat",{"_index":435,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["originlng",{"_index":437,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["orm",{"_index":565,"title":{},"body":{"index.html":{}}}],["otra",{"_index":461,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["out",{"_index":105,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"overview.html":{}}}],["overview",{"_index":642,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.lat",{"_index":448,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["p.lng",{"_index":449,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["package",{"_index":479,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":253,"title":{},"body":{"injectables/CreateAlertUseCase.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["parte",{"_index":528,"title":{},"body":{"index.html":{}}}],["payloads",{"_index":622,"title":{},"body":{"index.html":{}}}],["persistencia",{"_index":561,"title":{},"body":{"index.html":{}}}],["por",{"_index":619,"title":{},"body":{"index.html":{}}}],["port=3003download",{"_index":584,"title":{},"body":{"index.html":{}}}],["post",{"_index":66,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"index.html":{}}}],["post()@apioperation({summary",{"_index":48,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["posteriores",{"_index":542,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":563,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":40,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["prisma",{"_index":119,"title":{},"body":{"injectables/AlertPrismaRepository.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["prisma.repository",{"_index":322,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{},"modules/RoutingModule.html":{}}}],["prisma.repository.ts",{"_index":426,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{},"coverage.html":{}}}],["prisma.repository.ts:10",{"_index":431,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["prisma.repository.ts:30",{"_index":429,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["prisma.repository.ts:7",{"_index":427,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["prisma.service",{"_index":365,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":373,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclient",{"_index":368,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":149,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":102,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"injectables/CreateGeolocationUseCase.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":594,"title":{},"body":{"index.html":{}}}],["project",{"_index":585,"title":{},"body":{"index.html":{}}}],["promise",{"_index":63,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/Alert.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"properties.html":{}}}],["provide",{"_index":111,"title":{},"body":{"modules/AlertModule.html":{},"modules/RoutingModule.html":{}}}],["providers",{"_index":97,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"overview.html":{}}}],["proyecto",{"_index":580,"title":{},"body":{"index.html":{}}}],["pruebas",{"_index":632,"title":{},"body":{"index.html":{}}}],["public",{"_index":9,"title":{},"body":{"classes/Alert.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{}}}],["puertos",{"_index":629,"title":{},"body":{"index.html":{}}}],["que",{"_index":225,"title":{},"body":{"classes/CreateAlertDto.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["raíz",{"_index":579,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":10,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["reflect",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["registrada",{"_index":89,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"index.html":{}}}],["registrar",{"_index":49,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"index.html":{}}}],["registro",{"_index":549,"title":{},"body":{"index.html":{}}}],["relacionados",{"_index":520,"title":{},"body":{"index.html":{}}}],["repo",{"_index":237,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["reportes",{"_index":540,"title":{},"body":{"index.html":{}}}],["repository",{"_index":126,"title":{},"body":{"injectables/AlertPrismaRepository.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["repository.ts",{"_index":355,"title":{},"body":{"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"coverage.html":{}}}],["repository.ts:3",{"_index":357,"title":{},"body":{"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{}}}],["requisitos",{"_index":567,"title":{},"body":{"index.html":{}}}],["reset",{"_index":104,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"overview.html":{}}}],["responsable",{"_index":514,"title":{},"body":{"index.html":{}}}],["respuesta",{"_index":603,"title":{},"body":{"index.html":{}}}],["results",{"_index":34,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":88,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CreateGeolocationUseCase.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["returns",{"_index":62,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"controllers/GeolocationController.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"injectables/PrismaService.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["route",{"_index":204,"title":{},"body":{"classes/Coordinates.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["routing",{"_index":223,"title":{"classes/Routing.html":{}},"body":{"classes/CreateAlertDto.html":{},"injectables/CreateRoutingUseCase.html":{},"interfaces/IRoutingRepository.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{},"index.html":{}}}],["routing.cachettl",{"_index":444,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["routing.destination.lat",{"_index":440,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["routing.destination.lng",{"_index":442,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["routing.deviceid",{"_index":434,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["routing.dto",{"_index":396,"title":{},"body":{"controllers/RoutingController.html":{}}}],["routing.dto.ts",{"_index":171,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["routing.dto.ts:22",{"_index":177,"title":{},"body":{"classes/Coordinates.html":{}}}],["routing.dto.ts:26",{"_index":179,"title":{},"body":{"classes/Coordinates.html":{}}}],["routing.dto.ts:33",{"_index":415,"title":{},"body":{"classes/RoutingDto.html":{}}}],["routing.dto.ts:39",{"_index":416,"title":{},"body":{"classes/RoutingDto.html":{}}}],["routing.dto.ts:45",{"_index":413,"title":{},"body":{"classes/RoutingDto.html":{}}}],["routing.dto.ts:51",{"_index":419,"title":{},"body":{"classes/RoutingDto.html":{}}}],["routing.dto.ts:55",{"_index":421,"title":{},"body":{"classes/RoutingDto.html":{}}}],["routing.dto.ts:60",{"_index":410,"title":{},"body":{"classes/RoutingDto.html":{}}}],["routing.origin.lat",{"_index":436,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["routing.origin.lng",{"_index":438,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["routing.route.map((p",{"_index":447,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["routing.status",{"_index":443,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["routing.timestamp",{"_index":445,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["routing.use",{"_index":314,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{},"controllers/RoutingController.html":{},"modules/RoutingModule.html":{},"coverage.html":{}}}],["routingcontroller",{"_index":390,"title":{"controllers/RoutingController.html":{}},"body":{"controllers/RoutingController.html":{},"modules/RoutingModule.html":{},"coverage.html":{}}}],["routingdto",{"_index":198,"title":{"classes/RoutingDto.html":{}},"body":{"classes/Coordinates.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"coverage.html":{}}}],["routingmodule",{"_index":150,"title":{"modules/RoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["routingparámetros",{"_index":605,"title":{},"body":{"index.html":{}}}],["routingprismarepository",{"_index":316,"title":{"injectables/RoutingPrismaRepository.html":{}},"body":{"injectables/CreateRoutingUseCase.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{},"overview.html":{}}}],["routingrepository",{"_index":318,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{},"modules/RoutingModule.html":{}}}],["routingstatus",{"_index":192,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{},"miscellaneous/enumerations.html":{}}}],["run",{"_index":588,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":219,"title":{},"body":{"classes/CreateAlertDto.html":{},"controllers/RoutingController.html":{},"index.html":{}}}],["rutas",{"_index":523,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":329,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{},"injectables/RoutingPrismaRepository.html":{}}}],["save(routing",{"_index":430,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["saved",{"_index":407,"title":{},"body":{"controllers/RoutingController.html":{},"index.html":{}}}],["saverouting",{"_index":392,"title":{},"body":{"controllers/RoutingController.html":{}}}],["saverouting(@body",{"_index":400,"title":{},"body":{"controllers/RoutingController.html":{}}}],["saverouting(dto",{"_index":393,"title":{},"body":{"controllers/RoutingController.html":{}}}],["saving",{"_index":327,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{}}}],["se",{"_index":626,"title":{},"body":{"index.html":{}}}],["seguridad",{"_index":623,"title":{},"body":{"index.html":{}}}],["service",{"_index":224,"title":{},"body":{"classes/CreateAlertDto.html":{},"index.html":{}}}],["servicio",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateAlertDto.html":{},"index.html":{}}}],["setup",{"_index":586,"title":{},"body":{"index.html":{}}}],["severidad",{"_index":555,"title":{},"body":{"index.html":{}}}],["si",{"_index":455,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["sigue",{"_index":628,"title":{},"body":{"index.html":{}}}],["siguiendo",{"_index":546,"title":{},"body":{"index.html":{}}}],["siguientes",{"_index":582,"title":{},"body":{"index.html":{}}}],["sistema",{"_index":531,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertPrismaRepository.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["spec",{"_index":286,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["spec.issatisfiedby(dto",{"_index":287,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["specifications/valid",{"_index":244,"title":{},"body":{"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{}}}],["src/.../create",{"_index":500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":138,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":140,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":165,"title":{},"body":{"injectables/AppService.html":{}}}],["src/infrastructure/database/prisma.module.ts",{"_index":363,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/infrastructure/database/prisma.service",{"_index":107,"title":{},"body":{"modules/AlertModule.html":{},"modules/RoutingModule.html":{}}}],["src/infrastructure/database/prisma.service.ts",{"_index":366,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/infrastructure/database/prisma.service.ts:22",{"_index":371,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/infrastructure/database/prisma.service.ts:9",{"_index":372,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/infrastructure/repositories/alert.prisma.repository",{"_index":109,"title":{},"body":{"modules/AlertModule.html":{},"injectables/CreateAlertUseCase.html":{}}}],["src/infrastructure/repositories/alert.prisma.repository.ts",{"_index":116,"title":{},"body":{"injectables/AlertPrismaRepository.html":{},"coverage.html":{}}}],["src/infrastructure/repositories/alert.prisma.repository.ts:10",{"_index":121,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["src/infrastructure/repositories/alert.prisma.repository.ts:7",{"_index":118,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["src/infrastructure/repositories/routing",{"_index":321,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{},"modules/RoutingModule.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":470,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/alert/alert.module.ts",{"_index":106,"title":{},"body":{"modules/AlertModule.html":{}}}],["src/modules/alert/controllers/alert.controller.ts",{"_index":39,"title":{},"body":{"controllers/AlertController.html":{},"coverage.html":{}}}],["src/modules/alert/controllers/alert.controller.ts:15",{"_index":60,"title":{},"body":{"controllers/AlertController.html":{}}}],["src/modules/alert/dto/create",{"_index":208,"title":{},"body":{"classes/CreateAlertDto.html":{},"coverage.html":{}}}],["src/modules/alert/entities/alert.entity",{"_index":123,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["src/modules/alert/entities/alert.entity.ts",{"_index":6,"title":{},"body":{"classes/Alert.html":{},"coverage.html":{}}}],["src/modules/alert/entities/alert.entity.ts:1",{"_index":20,"title":{},"body":{"classes/Alert.html":{}}}],["src/modules/alert/entities/alert.entity.ts:3",{"_index":32,"title":{},"body":{"classes/Alert.html":{}}}],["src/modules/alert/entities/alert.entity.ts:4",{"_index":26,"title":{},"body":{"classes/Alert.html":{}}}],["src/modules/alert/entities/alert.entity.ts:5",{"_index":27,"title":{},"body":{"classes/Alert.html":{}}}],["src/modules/alert/entities/alert.entity.ts:6",{"_index":25,"title":{},"body":{"classes/Alert.html":{}}}],["src/modules/alert/entities/alert.entity.ts:7",{"_index":31,"title":{},"body":{"classes/Alert.html":{}}}],["src/modules/alert/repositories/alert",{"_index":125,"title":{},"body":{"injectables/AlertPrismaRepository.html":{},"interfaces/IAlertRepository.html":{},"coverage.html":{}}}],["src/modules/alert/use",{"_index":232,"title":{},"body":{"injectables/CreateAlertUseCase.html":{},"coverage.html":{}}}],["src/modules/geolocation/controllers/geolocation.controller.ts",{"_index":338,"title":{},"body":{"controllers/GeolocationController.html":{},"coverage.html":{}}}],["src/modules/geolocation/controllers/geolocation.controller.ts:24",{"_index":342,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["src/modules/geolocation/dto/create",{"_index":256,"title":{},"body":{"classes/CreateGeolocationDto.html":{},"coverage.html":{}}}],["src/modules/geolocation/entities/geolocation.entity.ts",{"_index":330,"title":{},"body":{"classes/Geolocation.html":{},"coverage.html":{}}}],["src/modules/geolocation/entities/geolocation.entity.ts:1",{"_index":332,"title":{},"body":{"classes/Geolocation.html":{}}}],["src/modules/geolocation/entities/geolocation.entity.ts:3",{"_index":333,"title":{},"body":{"classes/Geolocation.html":{}}}],["src/modules/geolocation/entities/geolocation.entity.ts:4",{"_index":334,"title":{},"body":{"classes/Geolocation.html":{}}}],["src/modules/geolocation/entities/geolocation.entity.ts:5",{"_index":335,"title":{},"body":{"classes/Geolocation.html":{}}}],["src/modules/geolocation/entities/geolocation.entity.ts:6",{"_index":336,"title":{},"body":{"classes/Geolocation.html":{}}}],["src/modules/geolocation/geolocation.module.ts",{"_index":351,"title":{},"body":{"modules/GeolocationModule.html":{}}}],["src/modules/geolocation/use",{"_index":275,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"coverage.html":{}}}],["src/modules/routing/controllers/routing.controller.ts",{"_index":391,"title":{},"body":{"controllers/RoutingController.html":{},"coverage.html":{}}}],["src/modules/routing/controllers/routing.controller.ts:22",{"_index":395,"title":{},"body":{"controllers/RoutingController.html":{}}}],["src/modules/routing/dto/create",{"_index":170,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/routing/entities/routing.entity",{"_index":432,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["src/modules/routing/entities/routing.entity.ts",{"_index":381,"title":{},"body":{"classes/Routing.html":{},"coverage.html":{}}}],["src/modules/routing/entities/routing.entity.ts:1",{"_index":382,"title":{},"body":{"classes/Routing.html":{}}}],["src/modules/routing/entities/routing.entity.ts:3",{"_index":385,"title":{},"body":{"classes/Routing.html":{}}}],["src/modules/routing/entities/routing.entity.ts:4",{"_index":386,"title":{},"body":{"classes/Routing.html":{}}}],["src/modules/routing/entities/routing.entity.ts:5",{"_index":384,"title":{},"body":{"classes/Routing.html":{}}}],["src/modules/routing/entities/routing.entity.ts:6",{"_index":387,"title":{},"body":{"classes/Routing.html":{}}}],["src/modules/routing/entities/routing.entity.ts:7",{"_index":388,"title":{},"body":{"classes/Routing.html":{}}}],["src/modules/routing/entities/routing.entity.ts:8",{"_index":383,"title":{},"body":{"classes/Routing.html":{}}}],["src/modules/routing/entities/routing.entity.ts:9",{"_index":389,"title":{},"body":{"classes/Routing.html":{}}}],["src/modules/routing/repositories/routing",{"_index":359,"title":{},"body":{"interfaces/IRoutingRepository.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{}}}],["src/modules/routing/routing.module.ts",{"_index":424,"title":{},"body":{"modules/RoutingModule.html":{}}}],["src/modules/routing/use",{"_index":313,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{},"coverage.html":{}}}],["start",{"_index":590,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":593,"title":{},"body":{"index.html":{}}}],["start:proddeployment",{"_index":595,"title":{},"body":{"index.html":{}}}],["started",{"_index":504,"title":{"index.html":{}},"body":{}}],["starter",{"_index":507,"title":{},"body":{"index.html":{}}}],["statements",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":83,"title":{},"body":{"controllers/AlertController.html":{},"classes/Coordinates.html":{},"controllers/GeolocationController.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"classes/Alert.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{}}}],["success",{"_index":193,"title":{},"body":{"classes/Coordinates.html":{},"classes/Routing.html":{},"classes/RoutingDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["success'})@isenum(routingstatus",{"_index":420,"title":{},"body":{"classes/RoutingDto.html":{}}}],["successfully",{"_index":408,"title":{},"body":{"controllers/RoutingController.html":{},"index.html":{}}}],["summary",{"_index":82,"title":{},"body":{"controllers/AlertController.html":{},"controllers/GeolocationController.html":{},"controllers/RoutingController.html":{}}}],["superior",{"_index":570,"title":{},"body":{"index.html":{}}}],["support",{"_index":639,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":640,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":495,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["table",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":618,"title":{},"body":{"index.html":{}}}],["test",{"_index":635,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":637,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":374,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":379,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":143,"title":{},"body":{"controllers/AppController.html":{}}}],["this.createalertusecase.execute(dto",{"_index":87,"title":{},"body":{"controllers/AlertController.html":{}}}],["this.createroutingusecase.execute(routing",{"_index":406,"title":{},"body":{"controllers/RoutingController.html":{}}}],["this.createusecase.execute(dto",{"_index":348,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["this.prisma.alert.create",{"_index":130,"title":{},"body":{"injectables/AlertPrismaRepository.html":{}}}],["this.prisma.geolocation.create",{"_index":299,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["this.prisma.routing.create",{"_index":433,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["this.repo.create(alert",{"_index":254,"title":{},"body":{"injectables/CreateAlertUseCase.html":{}}}],["this.routingrepository.save(routing",{"_index":324,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{}}}],["this.save(routing",{"_index":458,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{}}}],["throw",{"_index":251,"title":{},"body":{"injectables/CreateAlertUseCase.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{}}}],["timeout",{"_index":216,"title":{},"body":{"classes/CreateAlertDto.html":{},"index.html":{}}}],["timestamp",{"_index":13,"title":{},"body":{"classes/Alert.html":{},"injectables/AlertPrismaRepository.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"classes/Geolocation.html":{},"classes/Routing.html":{},"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["tipo",{"_index":229,"title":{},"body":{"classes/CreateAlertDto.html":{},"index.html":{}}}],["token",{"_index":625,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":189,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{},"dependencies.html":{}}}],["trazabilidad",{"_index":539,"title":{},"body":{"index.html":{}}}],["trazado",{"_index":553,"title":{},"body":{"index.html":{}}}],["true",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}],["true})@type(undefined",{"_index":418,"title":{},"body":{"classes/RoutingDto.html":{}}}],["try",{"_index":323,"title":{},"body":{"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"injectables/AlertPrismaRepository.html":{},"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"injectables/CreateAlertUseCase.html":{},"classes/CreateGeolocationDto.html":{},"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"classes/Geolocation.html":{},"controllers/GeolocationController.html":{},"interfaces/IAlertRepository.html":{},"interfaces/IRoutingRepository.html":{},"classes/Routing.html":{},"controllers/RoutingController.html":{},"classes/RoutingDto.html":{},"injectables/RoutingPrismaRepository.html":{},"coverage.html":{},"index.html":{}}}],["typescript",{"_index":292,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["ubicación",{"_index":556,"title":{},"body":{"index.html":{}}}],["ui",{"_index":496,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["un",{"_index":453,"title":{},"body":{"injectables/RoutingPrismaRepository.html":{},"index.html":{}}}],["una",{"_index":50,"title":{},"body":{"controllers/AlertController.html":{},"index.html":{}}}],["undefined",{"_index":304,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["undefined})@isarray()@validatenested({each",{"_index":417,"title":{},"body":{"classes/RoutingDto.html":{}}}],["undefined})@isnumber",{"_index":178,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateGeolocationDto.html":{}}}],["unitarias",{"_index":634,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":343,"title":{},"body":{"controllers/GeolocationController.html":{}}}],["unlicensed",{"_index":649,"title":{},"body":{"properties.html":{}}}],["unsafe",{"_index":294,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{},"injectables/CreateRoutingUseCase.html":{},"injectables/PrismaService.html":{}}}],["usando",{"_index":564,"title":{},"body":{"index.html":{}}}],["use",{"_index":75,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"controllers/GeolocationController.html":{},"modules/GeolocationModule.html":{},"controllers/RoutingController.html":{},"modules/RoutingModule.html":{}}}],["useclass",{"_index":113,"title":{},"body":{"modules/AlertModule.html":{},"modules/RoutingModule.html":{}}}],["v16",{"_index":569,"title":{},"body":{"index.html":{}}}],["validación",{"_index":557,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":187,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}],["validator",{"_index":188,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateAlertDto.html":{},"classes/CreateGeolocationDto.html":{},"classes/RoutingDto.html":{},"dependencies.html":{},"index.html":{}}}],["validgeolocationspecification",{"_index":282,"title":{},"body":{"injectables/CreateGeolocationUseCase.html":{}}}],["value",{"_index":29,"title":{},"body":{"classes/Alert.html":{},"classes/Routing.html":{},"miscellaneous/enumerations.html":{}}}],["variables",{"_index":576,"title":{},"body":{"index.html":{}}}],["vehiculo",{"_index":613,"title":{},"body":{"index.html":{}}}],["version",{"_index":646,"title":{},"body":{"properties.html":{}}}],["versión",{"_index":574,"title":{},"body":{"index.html":{}}}],["watch",{"_index":591,"title":{},"body":{"index.html":{}}}],["y",{"_index":515,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":103,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/GeolocationModule.html":{},"modules/PrismaModule.html":{},"modules/RoutingModule.html":{},"overview.html":{}}}],["zzz",{"_index":199,"title":{},"body":{"classes/Coordinates.html":{},"classes/RoutingDto.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Alert.html":{"url":"classes/Alert.html","title":"class - Alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/alert/entities/alert.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deviceId\n                            \n                            \n                                    Public\n                                    Readonly\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                source\n                            \n                            \n                                    Public\n                                    Readonly\n                                timestamp\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, message: string, source: string, deviceId: string, timestamp: Date)\n                    \n                \n                        \n                            \n                                Defined in src/modules/alert/entities/alert.entity.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timestamp\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/alert/entities/alert.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/alert/entities/alert.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/alert/entities/alert.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/modules/alert/entities/alert.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/alert/entities/alert.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Alert {\n  constructor(\n    public readonly type: string,\n    public readonly message: string,\n    public readonly source: string,\n    public readonly deviceId: string,\n    public readonly timestamp: Date = new Date(),\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AlertController.html":{"url":"controllers/AlertController.html","title":"controller - AlertController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AlertController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/alert/controllers/alert.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                alerts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateAlertDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Registrar una alerta'})@ApiResponse({status: 201, description: 'Alerta creada correctamente.'})@ApiResponse({status: 400, description: 'Datos inválidos.'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/alert/controllers/alert.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateAlertDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { CreateAlertDto } from '../dto/create-alert.dto';\nimport { ApiTags, ApiResponse, ApiOperation } from '@nestjs/swagger';\nimport { CreateAlertUseCase } from '../use-cases/create-alert.use-case';\n\n@ApiTags('alerts')\n@Controller('alerts')\nexport class AlertController {\n  constructor(private readonly createAlertUseCase: CreateAlertUseCase) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Registrar una alerta' })\n  @ApiResponse({ status: 201, description: 'Alerta creada correctamente.' })\n  @ApiResponse({ status: 400, description: 'Datos inválidos.' })\n  async create(@Body() dto: CreateAlertDto): Promise {\n    await this.createAlertUseCase.execute(dto);\n    return { message: 'Alerta registrada' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AlertModule.html":{"url":"modules/AlertModule.html","title":"module - AlertModule","body":"\n                   \n\n\n\n\n    Modules\n    AlertModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AlertModule\n\n\n\ncluster_AlertModule_providers\n\n\n\n\nAlertPrismaRepository\n\nAlertPrismaRepository\n\n\n\nAlertModule\n\nAlertModule\n\nAlertModule -->\n\nAlertPrismaRepository->AlertModule\n\n\n\n\n\nCreateAlertUseCase\n\nCreateAlertUseCase\n\nAlertModule -->\n\nCreateAlertUseCase->AlertModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAlertModule -->\n\nPrismaService->AlertModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/alert/alert.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AlertPrismaRepository\n                        \n                        \n                            CreateAlertUseCase\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AlertController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/infrastructure/database/prisma.service';\nimport { AlertController } from './controllers/alert.controller';\nimport { CreateAlertUseCase } from './use-cases/create-alert.use-case';\nimport { AlertPrismaRepository } from 'src/infrastructure/Repositories/alert.prisma.repository';\n\n@Module({\n  imports: [],\n  controllers: [AlertController],\n  providers: [\n    CreateAlertUseCase,\n    AlertPrismaRepository,\n    {\n      provide: 'AlertRepository',\n      useClass: AlertPrismaRepository,\n    },\n    PrismaService,\n  ],\n})\nexport class AlertModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertPrismaRepository.html":{"url":"injectables/AlertPrismaRepository.html","title":"injectable - AlertPrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AlertPrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/Repositories/alert.prisma.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/Repositories/alert.prisma.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(alert: Alert)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/Repositories/alert.prisma.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                alert\n                                            \n                                                            Alert\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../database/prisma.service';\nimport { Alert } from 'src/modules/alert/entities/alert.entity';\nimport { IAlertRepository } from 'src/modules/alert/repositories/alert-repository';\n\n@Injectable()\nexport class AlertPrismaRepository implements IAlertRepository {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(alert: Alert): Promise {\n    const createdAlert = await this.prisma.alert.create({\n      data: {\n        type: alert.type,\n        message: alert.message,\n        source: alert.source,\n        deviceId: alert.deviceId,\n        timestamp: alert.timestamp,\n      },\n    });\n    return createdAlert;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAlertModule\n\nAlertModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAlertModule->AppModule\n\n\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nAppModule -->\n\nGeolocationModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nRoutingModule\n\nRoutingModule\n\nAppModule -->\n\nRoutingModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AlertModule\n                        \n                        \n                            GeolocationModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            RoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { PrismaModule } from './infrastructure/database/prisma.module';\n\nimport { GeolocationModule } from './modules/geolocation/geolocation.module';\nimport { RoutingModule } from './modules/routing/routing.module';\nimport { AlertModule } from './modules/alert/alert.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.env',\n    }),\n    GeolocationModule,\n    RoutingModule,\n    AlertModule,\n    PrismaModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Servicio de auditoria!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coordinates.html":{"url":"classes/Coordinates.html","title":"class - Coordinates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coordinates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routing/dto/create-routing.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                lat\n                            \n                            \n                                    \n                                    \n                                lng\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 4.567})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/dto/create-routing.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lng\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/dto/create-routing.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsPositive,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nenum RoutingStatus {\n  SUCCESS = 'success',\n  ERROR = 'error',\n}\n\nclass Coordinates {\n  @ApiProperty({ example: 4.567 })\n  @IsNumber()\n  lat: number;\n\n  @ApiProperty({ example: -74.567 })\n  @IsNumber()\n  lng: number;\n}\n\nexport class RoutingDto {\n  @ApiProperty({ example: 'ZZZ-001' })\n  @IsString()\n  @IsNotEmpty()\n  deviceId: string;\n\n  @ApiProperty({ type: Coordinates })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Coordinates)\n  origin: Coordinates;\n\n  @ApiProperty({ type: Coordinates })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Coordinates)\n  destination: Coordinates;\n\n  @ApiProperty({ type: [Coordinates] })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => Coordinates)\n  route: Coordinates[];\n\n  @ApiProperty({ example: 'success' })\n  @IsEnum(RoutingStatus)\n  status: RoutingStatus;\n\n  @ApiProperty({ example: 300 })\n  @IsNumber()\n  @IsPositive()\n  cacheTTL: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAlertDto.html":{"url":"classes/CreateAlertDto.html","title":"class - CreateAlertDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAlertDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/alert/dto/create-alert.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deviceId\n                            \n                            \n                                    \n                                    \n                                    \n                                message\n                            \n                            \n                                    \n                                    \n                                    \n                                source\n                            \n                            \n                                    \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'JJJ-255', description: 'ID del dispositivo'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/alert/dto/create-alert.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Timeout al calcular ruta', description: 'Mensaje de alerta'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/alert/dto/create-alert.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'routing-service', description: 'Servicio que generó la alerta'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/alert/dto/create-alert.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'routing-error', description: 'Tipo de alerta'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/alert/dto/create-alert.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAlertDto {\n  @ApiProperty({ example: 'routing-error', description: 'Tipo de alerta' })\n  @IsString()\n  @IsNotEmpty()\n  type: string;\n\n  @ApiProperty({\n    example: 'Timeout al calcular ruta',\n    description: 'Mensaje de alerta',\n  })\n  @IsString()\n  @IsNotEmpty()\n  message: string;\n\n  @ApiProperty({\n    example: 'routing-service',\n    description: 'Servicio que generó la alerta',\n  })\n  @IsString()\n  @IsNotEmpty()\n  source: string;\n\n  @ApiProperty({ example: 'JJJ-255', description: 'ID del dispositivo' })\n  @IsString()\n  @IsNotEmpty()\n  deviceId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateAlertUseCase.html":{"url":"injectables/CreateAlertUseCase.html","title":"injectable - CreateAlertUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateAlertUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/alert/use-cases/create-alert.use-case.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: AlertPrismaRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/alert/use-cases/create-alert.use-case.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        AlertPrismaRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/alert/use-cases/create-alert.use-case.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { AlertPrismaRepository } from 'src/infrastructure/Repositories/alert.prisma.repository';\nimport { Alert } from '../entities/alert.entity';\nimport { AlertSpecification } from '../specifications/valid-alert.spec';\n\n@Injectable()\nexport class CreateAlertUseCase {\n  constructor(private readonly repo: AlertPrismaRepository) {}\n\n  async execute(data: {\n    type: string;\n    message: string;\n    source: string;\n    deviceId: string;\n  }): Promise {\n    const alert = new Alert(\n      data.type,\n      data.message,\n      data.source,\n      data.deviceId,\n    );\n    if (!AlertSpecification.isSatisfiedBy(alert)) {\n      throw new BadRequestException('Datos inválidos para la alerta');\n    }\n\n    await this.repo.create(alert);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGeolocationDto.html":{"url":"classes/CreateGeolocationDto.html","title":"class - CreateGeolocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGeolocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/geolocation/dto/create-geolocation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deviceId\n                            \n                            \n                                    \n                                    \n                                lat\n                            \n                            \n                                    \n                                    \n                                lng\n                            \n                            \n                                    \n                                    \n                                    \n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'AAA-222'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/geolocation/dto/create-geolocation.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 4.710989})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/geolocation/dto/create-geolocation.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lng\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/geolocation/dto/create-geolocation.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2025-04-15T17:05:00.000Z'})@IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/geolocation/dto/create-geolocation.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  IsOptional,\n  IsISO8601,\n} from 'class-validator';\n\nexport class CreateGeolocationDto {\n  @ApiProperty({ example: 'AAA-222' })\n  @IsString()\n  @IsNotEmpty()\n  deviceId: string;\n\n  @ApiProperty({ example: 4.710989 })\n  @IsNumber()\n  lat: number;\n\n  @ApiProperty({ example: -74.07209 })\n  @IsNumber()\n  lng: number;\n\n  @ApiProperty({ example: '2025-04-15T17:05:00.000Z' })\n  @IsISO8601()\n  @IsOptional()\n  timestamp: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateGeolocationUseCase.html":{"url":"injectables/CreateGeolocationUseCase.html","title":"injectable - CreateGeolocationUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateGeolocationUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/geolocation/use-cases/create-geolocation.use-case.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/geolocation/use-cases/create-geolocation.use-case.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(dto: CreateGeolocationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/geolocation/use-cases/create-geolocation.use-case.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateGeolocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { CreateGeolocationDto } from '../dto/create-geolocation.dto';\nimport { PrismaService } from '../../../infrastructure/database/prisma.service';\nimport { ValidGeolocationSpecification } from '../specifications/valid-geolocation.spec';\nimport { Geolocation } from '../entities/geolocation.entity';\n\n@Injectable()\nexport class CreateGeolocationUseCase {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async execute(dto: CreateGeolocationDto): Promise {\n    const spec = new ValidGeolocationSpecification();\n    if (!spec.isSatisfiedBy(dto)) {\n      throw new BadRequestException('Datos inválidos');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    const geo: Geolocation = await this.prisma.geolocation.create({\n      data: {\n        deviceId: dto.deviceId,\n        lat: dto.lat,\n        lng: dto.lng,\n        timestamp: new Date(),\n      },\n    });\n\n    if (geo.lat === undefined || geo.lng === undefined) {\n      throw new Error('Latitude and longitude must be defined');\n    }\n\n    if (!geo.deviceId) {\n      throw new Error('Device ID must be defined');\n    }\n\n    return new Geolocation(\n      geo.deviceId,\n      geo.lat ?? 0,\n      geo.lng ?? 0,\n      new Date(geo.timestamp),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateRoutingUseCase.html":{"url":"injectables/CreateRoutingUseCase.html","title":"injectable - CreateRoutingUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateRoutingUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routing/use-cases/create-routing.use-case.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(routingRepository: RoutingPrismaRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/routing/use-cases/create-routing.use-case.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routingRepository\n                                                  \n                                                        \n                                                                        RoutingPrismaRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(routing: Routing)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/routing/use-cases/create-routing.use-case.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                routing\n                                            \n                                                            Routing\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Routing } from '../entities/routing.entity';\nimport { RoutingPrismaRepository } from 'src/infrastructure/Repositories/routing-prisma.repository';\n\n@Injectable()\nexport class CreateRoutingUseCase {\n  constructor(private readonly routingRepository: RoutingPrismaRepository) {}\n\n  async execute(routing: Routing): Promise {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n      await this.routingRepository.save(routing);\n    } catch (error) {\n      console.error('Error saving routing:', error);\n      throw new Error('Failed to save routing data');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Geolocation.html":{"url":"classes/Geolocation.html","title":"class - Geolocation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Geolocation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/geolocation/entities/geolocation.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                deviceId\n                            \n                            \n                                    Public\n                                    Readonly\n                                lat\n                            \n                            \n                                    Public\n                                    Readonly\n                                lng\n                            \n                            \n                                    Public\n                                    Readonly\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceId: string, lat: number, lng: number, timestamp: Date)\n                    \n                \n                        \n                            \n                                Defined in src/modules/geolocation/entities/geolocation.entity.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lat\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lng\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timestamp\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/geolocation/entities/geolocation.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/geolocation/entities/geolocation.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        lng\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/geolocation/entities/geolocation.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/geolocation/entities/geolocation.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Geolocation {\n  constructor(\n    public readonly deviceId: string,\n    public readonly lat: number,\n    public readonly lng: number,\n    public readonly timestamp: Date,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeolocationController.html":{"url":"controllers/GeolocationController.html","title":"controller - GeolocationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeolocationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/geolocation/controllers/geolocation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                geolocation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateGeolocationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Registrar geolocalización'})@ApiResponse({status: 201, description: 'Geolocalización registrada correctamente'})@ApiResponse({status: 400, description: 'Datos inválidos'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/geolocation/controllers/geolocation.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateGeolocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { CreateGeolocationDto } from '../dto/create-geolocation.dto';\nimport { CreateGeolocationUseCase } from '../use-cases/create-geolocation.use-case';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiBearerAuth,\n  ApiResponse,\n} from '@nestjs/swagger';\n\n@ApiTags('Geolocation')\n@ApiBearerAuth()\n@Controller('geolocation')\nexport class GeolocationController {\n  constructor(private readonly createUseCase: CreateGeolocationUseCase) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Registrar geolocalización' })\n  @ApiResponse({\n    status: 201,\n    description: 'Geolocalización registrada correctamente',\n  })\n  @ApiResponse({ status: 400, description: 'Datos inválidos' })\n  async create(@Body() dto: CreateGeolocationDto) {\n    return this.createUseCase.execute(dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeolocationModule.html":{"url":"modules/GeolocationModule.html","title":"module - GeolocationModule","body":"\n                   \n\n\n\n\n    Modules\n    GeolocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeolocationModule\n\n\n\ncluster_GeolocationModule_providers\n\n\n\n\nCreateGeolocationUseCase\n\nCreateGeolocationUseCase\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nGeolocationModule -->\n\nCreateGeolocationUseCase->GeolocationModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nGeolocationModule -->\n\nPrismaService->GeolocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/geolocation/geolocation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateGeolocationUseCase\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeolocationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeolocationController } from './controllers/geolocation.controller';\nimport { CreateGeolocationUseCase } from './use-cases/create-geolocation.use-case';\nimport { PrismaService } from '../../infrastructure/database/prisma.service';\n\n@Module({\n  controllers: [GeolocationController],\n  providers: [CreateGeolocationUseCase, PrismaService],\n})\nexport class GeolocationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAlertRepository.html":{"url":"interfaces/IAlertRepository.html","title":"interface - IAlertRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAlertRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/alert/repositories/alert-repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Alert)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/alert/repositories/alert-repository.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Alert\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Alert } from '../entities/alert.entity';\nexport interface IAlertRepository {\n  create(data: Alert): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoutingRepository.html":{"url":"interfaces/IRoutingRepository.html","title":"interface - IRoutingRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoutingRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routing/repositories/routing-repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: Routing)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/routing/repositories/routing-repository.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Routing\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Routing } from '../entities/routing.entity';\nexport interface IRoutingRepository {\n  create(data: Routing): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/database/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/database/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/database/prisma.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, OnModuleDestroy } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService\n  extends PrismaClient\n  implements OnModuleInit, OnModuleDestroy\n{\n  async onModuleInit() {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      await this.$connect();\n    } catch (error) {\n      console.error(\n        'Error connecting to the database:',\n        (error as Error).message || error,\n      );\n      throw error;\n    }\n  }\n\n  async onModuleDestroy() {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      await this.$disconnect();\n    } catch (error) {\n      console.error(\n        'Error disconnecting from the database:',\n        (error as Error).message || error,\n      );\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Routing.html":{"url":"classes/Routing.html","title":"class - Routing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Routing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routing/entities/routing.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cacheTTL\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                deviceId\n                            \n                            \n                                    Public\n                                origin\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceId: string, origin: literal type, destination: literal type, route: literal type[], status: \"success\" | \"error\", cacheTTL: number, timestamp: Date)\n                    \n                \n                        \n                            \n                                Defined in src/modules/routing/entities/routing.entity.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        origin\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        destination\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                    \"success\" | \"error\"\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheTTL\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timestamp\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cacheTTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/entities/routing.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/entities/routing.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/entities/routing.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/entities/routing.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/entities/routing.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"success\" | \"error\"\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/entities/routing.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/entities/routing.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Routing {\n  constructor(\n    public deviceId: string,\n    public origin: { lat: number; lng: number },\n    public destination: { lat: number; lng: number },\n    public route: { lat: number; lng: number }[],\n    public status: 'success' | 'error',\n    public cacheTTL: number,\n    public timestamp: Date = new Date(),\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoutingController.html":{"url":"controllers/RoutingController.html","title":"controller - RoutingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoutingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routing/controllers/routing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                routing\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                saveRouting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        saveRouting\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRouting(dto: RoutingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Registrar ruta calculada'})@ApiResponse({status: 201, description: 'Ruta registrada correctamente'})@ApiResponse({status: 400, description: 'Datos inválidos'})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/routing/controllers/routing.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RoutingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { Routing } from '../entities/routing.entity';\nimport { RoutingDto } from '../dto/create-routing.dto';\nimport { CreateRoutingUseCase } from '../use-cases/create-routing.use-case';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@ApiTags('Routing')\n@ApiBearerAuth()\n@Controller('routing')\nexport class RoutingController {\n  constructor(private readonly createRoutingUseCase: CreateRoutingUseCase) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Registrar ruta calculada' })\n  @ApiResponse({ status: 201, description: 'Ruta registrada correctamente' })\n  @ApiResponse({ status: 400, description: 'Datos inválidos' })\n  async saveRouting(@Body() dto: RoutingDto): Promise {\n    const routing = new Routing(\n      dto.deviceId,\n      dto.origin,\n      dto.destination,\n      dto.route,\n      dto.status,\n      dto.cacheTTL,\n    );\n    await this.createRoutingUseCase.execute(routing);\n    return { message: 'Routing data saved successfully' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoutingDto.html":{"url":"classes/RoutingDto.html","title":"class - RoutingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoutingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/routing/dto/create-routing.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                cacheTTL\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                destination\n                            \n                            \n                                    \n                                    \n                                    \n                                deviceId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                origin\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                route\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        cacheTTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 300})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/dto/create-routing.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Coordinates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Coordinates})@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/dto/create-routing.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ZZZ-001'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/dto/create-routing.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Coordinates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Coordinates})@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/dto/create-routing.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Coordinates[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/dto/create-routing.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoutingStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'success'})@IsEnum(RoutingStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/routing/dto/create-routing.dto.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsPositive,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nenum RoutingStatus {\n  SUCCESS = 'success',\n  ERROR = 'error',\n}\n\nclass Coordinates {\n  @ApiProperty({ example: 4.567 })\n  @IsNumber()\n  lat: number;\n\n  @ApiProperty({ example: -74.567 })\n  @IsNumber()\n  lng: number;\n}\n\nexport class RoutingDto {\n  @ApiProperty({ example: 'ZZZ-001' })\n  @IsString()\n  @IsNotEmpty()\n  deviceId: string;\n\n  @ApiProperty({ type: Coordinates })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Coordinates)\n  origin: Coordinates;\n\n  @ApiProperty({ type: Coordinates })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Coordinates)\n  destination: Coordinates;\n\n  @ApiProperty({ type: [Coordinates] })\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => Coordinates)\n  route: Coordinates[];\n\n  @ApiProperty({ example: 'success' })\n  @IsEnum(RoutingStatus)\n  status: RoutingStatus;\n\n  @ApiProperty({ example: 300 })\n  @IsNumber()\n  @IsPositive()\n  cacheTTL: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutingModule.html":{"url":"modules/RoutingModule.html","title":"module - RoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoutingModule\n\n\n\ncluster_RoutingModule_providers\n\n\n\n\nCreateRoutingUseCase\n\nCreateRoutingUseCase\n\n\n\nRoutingModule\n\nRoutingModule\n\nRoutingModule -->\n\nCreateRoutingUseCase->RoutingModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nRoutingModule -->\n\nPrismaService->RoutingModule\n\n\n\n\n\nRoutingPrismaRepository\n\nRoutingPrismaRepository\n\nRoutingModule -->\n\nRoutingPrismaRepository->RoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/routing/routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateRoutingUseCase\n                        \n                        \n                            PrismaService\n                        \n                        \n                            RoutingPrismaRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoutingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/infrastructure/database/prisma.service';\nimport { RoutingController } from './controllers/routing.controller';\nimport { CreateRoutingUseCase } from './use-cases/create-routing.use-case';\nimport { RoutingPrismaRepository } from 'src/infrastructure/Repositories/routing-prisma.repository';\n\n@Module({\n  imports: [],\n  controllers: [RoutingController],\n  providers: [\n    CreateRoutingUseCase,\n    RoutingPrismaRepository,\n    {\n      provide: 'RoutingRepository',\n      useClass: RoutingPrismaRepository,\n    },\n    PrismaService,\n  ],\n})\nexport class RoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoutingPrismaRepository.html":{"url":"injectables/RoutingPrismaRepository.html","title":"injectable - RoutingPrismaRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoutingPrismaRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/Repositories/routing-prisma.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/Repositories/routing-prisma.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(routing: Routing)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/Repositories/routing-prisma.repository.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                routing\n                                            \n                                                            Routing\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                        \n                    save(routing: Routing)\n                \n            \n\n\n                    \n                        \n                            Defined in src/infrastructure/Repositories/routing-prisma.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                routing\n                                            \n                                                            Routing\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../database/prisma.service';\nimport { Routing } from 'src/modules/routing/entities/routing.entity';\nimport { IRoutingRepository } from 'src/modules/routing/repositories/routing-repository';\n\n@Injectable()\nexport class RoutingPrismaRepository implements IRoutingRepository {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async save(routing: Routing): Promise {\n    await this.prisma.routing.create({\n      data: {\n        deviceId: routing.deviceId,\n        originLat: routing.origin.lat,\n        originLng: routing.origin.lng,\n        destinationLat: routing.destination.lat,\n        destinationLng: routing.destination.lng,\n        status: routing.status,\n        cacheTTL: routing.cacheTTL,\n        timestamp: routing.timestamp,\n        route: {\n          createMany: {\n            data: routing.route.map((p) => ({ lat: p.lat, lng: p.lng })),\n          },\n        },\n      },\n    });\n  }\n\n  async create(routing: Routing): Promise {\n    // Implementa la lógica para crear un nuevo routing si es necesario\n    await this.save(routing); // O cualquier otra lógica que necesites\n    return routing;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infrastructure/Repositories/alert.prisma.repository.ts\n            \n            injectable\n            AlertPrismaRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infrastructure/Repositories/routing-prisma.repository.ts\n            \n            injectable\n            RoutingPrismaRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infrastructure/database/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/alert/controllers/alert.controller.ts\n            \n            controller\n            AlertController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/alert/dto/create-alert.dto.ts\n            \n            class\n            CreateAlertDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/alert/entities/alert.entity.ts\n            \n            class\n            Alert\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/alert/repositories/alert-repository.ts\n            \n            interface\n            IAlertRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/alert/use-cases/create-alert.use-case.ts\n            \n            injectable\n            CreateAlertUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/geolocation/controllers/geolocation.controller.ts\n            \n            controller\n            GeolocationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/geolocation/dto/create-geolocation.dto.ts\n            \n            class\n            CreateGeolocationDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/geolocation/entities/geolocation.entity.ts\n            \n            class\n            Geolocation\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/geolocation/use-cases/create-geolocation.use-case.ts\n            \n            injectable\n            CreateGeolocationUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/routing/controllers/routing.controller.ts\n            \n            controller\n            RoutingController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/routing/dto/create-routing.dto.ts\n            \n            class\n            Coordinates\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/routing/dto/create-routing.dto.ts\n            \n            class\n            RoutingDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/routing/entities/routing.entity.ts\n            \n            class\n            Routing\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/routing/repositories/routing-repository.ts\n            \n            interface\n            IRoutingRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/routing/use-cases/create-routing.use-case.ts\n            \n            injectable\n            CreateRoutingUseCase\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.1.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cross-env : ^7.0.3\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RoutingStatus   (src/.../create-routing.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/routing/dto/create-routing.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        RoutingStatus\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nDescription\nNest framework TypeScript starter repository.\nMicroservicio de Conversión de Monedas BBVA\nEl microservicio de auditoría es responsable de registrar y almacenar de forma estructurada los datos relacionados con:\nGeolocalización de dispositivos\nRutas calculadas\nAlertas generadas\nEste servicio forma parte de una arquitectura de microservicios para un sistema de monitoreo y control de flotas, y actúa como bitácora central para trazabilidad, reportes y análisis posteriores.\nEstá construido con NestJS siguiendo una arquitectura hexagonal.\nCaracterísticas\nRegistro de geolocalizaciones (lat, lng, timestamp, deviceId).\nRegistro de rutas (origen, destino, trazado, estado).\nRegistro de alertas (tipo, severidad, mensaje, timestamp, ubicación).\nValidación de datos mediante DTOs y class-validator.\nSwagger API Documentation.\nPersistencia en PostgreSQL usando Prisma ORM.\nArquitectura limpia y hexagonal\nRequisitos\n\nNode.js (v16 o superior)\nnpm\nDocker y Docker Compose (para la versión containerizada)\n\nVariables de entorno\nCrear un archivo .env en la raíz del proyecto con las siguientes variables:\nExample :DATABASE_URL=postgresql://postgres:postgres@db:5432/audit_db\nPORT=3003Download the repository\nExample :$Project setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodDeployment\nEndpoints\nAudit Geolocation\nExample :POST /geolocationParámetros de consulta:\nExample :{\n  \"deviceId\": \"ASD-112\",\n  \"lat\": 4.710989,\n  \"lng\": -74.072090\n}Respuesta:\nExample : {\n    \"deviceId\": \"ASD-112\",\n    \"lat\": 4.710989,\n    \"lng\": -74.07209,\n    \"timestamp\": \"2025-04-16T16:37:31.125Z\"\n}Audit Routing\nExample :POST /routingParámetros de consulta:\nExample :{\n    \"deviceId\": \"ABD-123\",\n    \"origin\": {\n        \"lat\": 4.123,\n        \"lng\": -74.123\n    },\n    \"destination\": {\n        \"lat\": 4.567,\n        \"lng\": -74.567\n    },\n    \"route\": [\n        {\n            \"lat\": 4.222,\n            \"lng\": -74.222\n        }\n    ],\n    \"status\": \"success\",\n    \"cacheTTL\": 300\n}Respuesta:\nExample :{\n    \"message\": \"Routing data saved successfully\"\n}Audit Alerts\nExample :POST /alertsParámetros de consulta:\nExample :{\n    \"type\": \"routing-error\",\n    \"message\": \"Timeout al calcular ruta\",\n    \"source\": \"routing-service\",\n    \"deviceId\": \"vehiculo-2\"\n}Respuesta:\nExample :{\n    \"message\": \"Alerta registrada\"\n}Documentación API\nLa documentación de la API está disponible en Swagger UI:\nExample :http://localhost:3003/api/docsIncluye:\nTags por módulo (Geolocation, Routing, Alert)\nEjemplos de payloads\nSeguridad con Bearer Token (si se activa)\nArquitectura\nEl proyecto sigue una arquitectura hexagonal (puertos y adaptadores)\nhttp://localhost:3003/documentation/\nPruebas\nExample :# Ejecutar pruebas unitarias\nnpm run test\n\n# Ejecutar pruebas con cobertura\nnpm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AlertModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeolocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AlertModule\n\n\n\ncluster_AlertModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_GeolocationModule\n\n\n\ncluster_GeolocationModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_RoutingModule\n\n\n\ncluster_RoutingModule_providers\n\n\n\n\nAlertPrismaRepository\n\nAlertPrismaRepository\n\n\n\nAlertModule\n\nAlertModule\n\nAlertModule -->\n\nAlertPrismaRepository->AlertModule\n\n\n\n\n\nCreateAlertUseCase\n\nCreateAlertUseCase\n\nAlertModule -->\n\nCreateAlertUseCase->AlertModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAlertModule -->\n\nPrismaService->AlertModule\n\n\n\n\n\nGeolocationModule\n\nGeolocationModule\n\nGeolocationModule -->\n\nPrismaService->GeolocationModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nRoutingModule\n\nRoutingModule\n\nRoutingModule -->\n\nPrismaService->RoutingModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAlertModule->AppModule\n\n\n\nAppModule -->\n\nGeolocationModule->AppModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nRoutingModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCreateGeolocationUseCase\n\nCreateGeolocationUseCase\n\nGeolocationModule -->\n\nCreateGeolocationUseCase->GeolocationModule\n\n\n\n\n\nCreateRoutingUseCase\n\nCreateRoutingUseCase\n\nRoutingModule -->\n\nCreateRoutingUseCase->RoutingModule\n\n\n\n\n\nRoutingPrismaRepository\n\nRoutingPrismaRepository\n\nRoutingModule -->\n\nRoutingPrismaRepository->RoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
